{"totalbranchlevel":2,"branchnum":8,"term_id":71,"name":"二元搜寻树","children":[{"totalbranchlevel":0,"facet_name":"摘要","totalbranchnum":0,"type":"branch","totalleafnum":6,"children":[{"url":"","content":"<div class=\"thumbinner\" style=\"width: 152px;\">\n <a class=\"image\" href=\"/wiki/File:Binary_search_tree.svg\"><img width=\"150\" height=\"125\" class=\"thumbimage\" alt=\"\" src=\"//upload.wikimedia.org/wikipedia/commons/thumb/d/da/Binary_search_tree.svg/150px-Binary_search_tree.svg.png\" data-file-height=\"250\" data-file-width=\"300\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/d/da/Binary_search_tree.svg/225px-Binary_search_tree.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/da/Binary_search_tree.svg/300px-Binary_search_tree.svg.png 2x\" /></a> \n <div class=\"thumbcaption\"> \n  <div class=\"magnify\">\n   <a title=\"放大\" class=\"internal\" href=\"/wiki/File:Binary_search_tree.svg\"></a>\n  </div> 3层二叉搜索树\n </div> \n</div>","fragment_id":"摘要_1","scratchTime":"2017-10-28 15:38:53.0","type":"leaf","flag":"fragment"},{"url":"","content":"<b>二叉查找树</b>（<span class=\"LangWithName\">英语：<span lang=\"en\" xml:lang=\"en\"><i>Binary Search Tree</i></span></span>），也称二叉搜索树、有序二叉树（<span class=\"LangWithName\">英语：<span lang=\"en\" xml:lang=\"en\">ordered binary tree</span></span>），排序二叉树（<span class=\"LangWithName\">英语：<span lang=\"en\" xml:lang=\"en\">sorted binary tree</span></span>），是指一棵空树或者具有下列性质的<a title=\"二叉树\" href=\"/wiki/%E4%BA%8C%E5%8F%89%E6%A0%91\">二叉树</a>：","fragment_id":"摘要_2","scratchTime":"2017-10-28 15:38:53.0","type":"leaf","flag":"fragment"},{"url":"","content":"<li>若任意节点的左子树不空，则左子树上所有节点的值均小于它的根节点的值；</li> \n<li>若任意节点的右子树不空，则右子树上所有节点的值均大于它的根节点的值；</li> \n<li>任意节点的左、右子树也分别为二叉查找树；</li> \n<li>没有键值相等的节点。</li>","fragment_id":"摘要_3","scratchTime":"2017-10-28 15:38:53.0","type":"leaf","flag":"fragment"},{"url":"","content":"二叉查找树相比于其他数据结构的优势在于查找、插入的时间复杂度较低。为O(log n)。二叉查找树是基础性数据结构，用于构建更为抽象的数据结构，如<a title=\"集合 (计算机科学)\" href=\"/wiki/%E9%9B%86%E5%90%88_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6)\">集合</a>、<a title=\"Multiset（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Multiset&amp;action=edit&amp;redlink=1\">multiset</a>、<a title=\"关联数组\" href=\"/wiki/%E5%85%B3%E8%81%94%E6%95%B0%E7%BB%84\">关联数组</a>等。","fragment_id":"摘要_4","scratchTime":"2017-10-28 15:38:53.0","type":"leaf","flag":"fragment"},{"url":"","content":"二叉查找树的查找过程和<a title=\"次优二叉树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E6%AC%A1%E4%BC%98%E4%BA%8C%E5%8F%89%E6%A0%91&amp;action=edit&amp;redlink=1\">次优二叉树</a>类似，通常采取二叉<a title=\"链表\" href=\"/wiki/%E9%93%BE%E8%A1%A8\">链表</a>作为二叉查找树的<a title=\"数据结构\" href=\"/wiki/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84\">存储结构</a>。中序遍历二叉查找树可得到一个关键字的有序序列，一个无序序列可以通过构造一棵二叉查找树变成一个有序序列，构造树的过程即为对无序序列进行查找的过程。每次插入的新的结点都是二叉查找树上新的叶子结点，在进行插入操作时，不必移动其它结点，只需改动某个结点的指针，由空变为非空即可。搜索、插入、删除的复杂度等于树高，期望<span class=\"mwe-math-element\"><span class=\"mwe-math-mathml-inline mwe-math-mathml-a11y\" style=\"display: none;\">\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\"> \n   <semantics> \n    <mrow class=\"MJX-TeXAtom-ORD\"> \n     <mstyle scriptlevel=\"0\" displaystyle=\"true\"> \n      <mi>\n       O\n      </mi> \n      <mo stretchy=\"false\">\n       (\n      </mo> \n      <mi>\n       log\n      </mi> \n      <mo>\n       ⁡\n       <!-- ⁡ -->\n      </mo> \n      <mi>\n       n\n      </mi> \n      <mo stretchy=\"false\">\n       )\n      </mo> \n     </mstyle> \n    </mrow> \n    <annotation encoding=\"application/x-tex\">\n     {\\displaystyle O(\\log n)}\n    </annotation> \n   </semantics> \n  </math></span><img class=\"mwe-math-fallback-image-inline\" aria-hidden=\"true\" style=\"width: 8.4ex; height: 2.84ex; vertical-align: -0.83ex;\" alt=\"O(\\log n)\" src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/aae0f22048ba6b7c05dbae17b056bfa16e21807d\" /></span>，最坏<span class=\"mwe-math-element\"><span class=\"mwe-math-mathml-inline mwe-math-mathml-a11y\" style=\"display: none;\">\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\"> \n   <semantics> \n    <mrow class=\"MJX-TeXAtom-ORD\"> \n     <mstyle scriptlevel=\"0\" displaystyle=\"true\"> \n      <mi>\n       O\n      </mi> \n      <mo stretchy=\"false\">\n       (\n      </mo> \n      <mi>\n       n\n      </mi> \n      <mo stretchy=\"false\">\n       )\n      </mo> \n     </mstyle> \n    </mrow> \n    <annotation encoding=\"application/x-tex\">\n     {\\displaystyle O(n)}\n    </annotation> \n   </semantics> \n  </math></span><img class=\"mwe-math-fallback-image-inline\" aria-hidden=\"true\" style=\"width: 5.01ex; height: 2.84ex; vertical-align: -0.83ex;\" alt=\"O(n)\" src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/34109fe397fdcff370079185bfdb65826cb5565a\" /></span>（数列有序，树退化成线性表）。","fragment_id":"摘要_5","scratchTime":"2017-10-28 15:38:53.0","type":"leaf","flag":"fragment"},{"url":"","content":"虽然二叉查找树的最坏效率是O(n),但它支持动态查询，且有很多改进版的二叉查找树可以使树高为<span class=\"mwe-math-element\"><span class=\"mwe-math-mathml-inline mwe-math-mathml-a11y\" style=\"display: none;\">\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\"> \n   <semantics> \n    <mrow class=\"MJX-TeXAtom-ORD\"> \n     <mstyle scriptlevel=\"0\" displaystyle=\"true\"> \n      <mi>\n       O\n      </mi> \n      <mo stretchy=\"false\">\n       (\n      </mo> \n      <mi>\n       log\n      </mi> \n      <mo>\n       ⁡\n       <!-- ⁡ -->\n      </mo> \n      <mi>\n       n\n      </mi> \n      <mo stretchy=\"false\">\n       )\n      </mo> \n     </mstyle> \n    </mrow> \n    <annotation encoding=\"application/x-tex\">\n     {\\displaystyle O(\\log n)}\n    </annotation> \n   </semantics> \n  </math></span><img class=\"mwe-math-fallback-image-inline\" aria-hidden=\"true\" style=\"width: 8.4ex; height: 2.84ex; vertical-align: -0.83ex;\" alt=\"O(\\log n)\" src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/aae0f22048ba6b7c05dbae17b056bfa16e21807d\" /></span>,如<a title=\"SBT（页面不存在）\" class=\"new\" href=\"/w/index.php?title=SBT&amp;action=edit&amp;redlink=1\">SBT</a>,<a title=\"AVL树\" href=\"/wiki/AVL%E6%A0%91\">AVL树</a>，<a title=\"红黑树\" href=\"/wiki/%E7%BA%A2%E9%BB%91%E6%A0%91\">红黑树</a>等。故不失为一种好的动态查找方法。","fragment_id":"摘要_6","scratchTime":"2017-10-28 15:38:53.0","type":"leaf","flag":"fragment"}]},{"totalbranchlevel":0,"facet_name":"二叉搜索树的查找算法","totalbranchnum":0,"type":"branch","totalleafnum":1,"children":[{"url":"","content":"<pre><span class=\"cm\">/* 以下代码为C++写成，下同*/</span>\n<span class=\"n\">Status</span> <span class=\"nf\">SearchBST</span><span class=\"p\">(</span><span class=\"n\">BiTree</span> <span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">KeyType</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">BiTree</span> <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">BiTree</span> <span class=\"o\">&amp;</span><span class=\"n\">p</span><span class=\"p\">){</span>\n  <span class=\"c1\">//在根指针T所指二元查找樹中递归地查找其關键字等於key的數據元素，若查找成功，</span>\n  <span class=\"c1\">//則指针p指向該數據元素節點，并返回TRUE，否則指针指向查找路徑上訪問的最後</span>\n  <span class=\"c1\">//一個節點并返回FALSE，指针f指向T的雙親，其初始调用值為NULL</span>\n  <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">T</span><span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"c1\">//查找不成功</span>\n    <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"n\">f</span><span class=\"p\">;</span>\n    <span class=\"k\">return</span> <span class=\"nb\">false</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">key</span> <span class=\"o\">==</span> <span class=\"n\">T</span><span class=\"o\">-&gt;</span><span class=\"n\">data</span><span class=\"p\">.</span><span class=\"n\">key</span><span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"c1\">//查找成功</span>\n    <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"n\">T</span><span class=\"p\">;</span>\n    <span class=\"k\">return</span> <span class=\"nb\">true</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">key</span> <span class=\"o\">&lt;</span> <span class=\"n\">T</span><span class=\"o\">-&gt;</span><span class=\"n\">data</span><span class=\"p\">.</span><span class=\"n\">key</span><span class=\"p\">)</span> <span class=\"c1\">//在左子樹中繼續查找</span>\n    <span class=\"k\">return</span> <span class=\"n\">SearchBST</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"o\">-&gt;</span><span class=\"n\">lchild</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"p\">);</span>\n  <span class=\"k\">else</span> <span class=\"c1\">//在右子樹中繼續查找</span>\n    <span class=\"k\">return</span> <span class=\"n\">SearchBST</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"o\">-&gt;</span><span class=\"n\">rchild</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</pre>","fragment_id":"二叉搜索树的查找算法_1","scratchTime":"2017-10-28 15:38:53.0","type":"leaf","flag":"fragment"}]},{"totalbranchlevel":0,"facet_name":"在二叉搜索树插入节点的算法","totalbranchnum":0,"type":"branch","totalleafnum":2,"children":[{"url":"","content":"<li>若b是空树，则将s所指结点作为根节点插入，否则：</li> \n<li>若s-&gt;data等于b的根节点的数据域之值，则返回，否则：</li> \n<li>若s-&gt;data小于b的根节点的数据域之值，则把s所指节点插入到左子树中，否则：</li> \n<li>把s所指节点插入到右子树中。（新插入节点总是叶子节点）</li>","fragment_id":"在二叉搜索树插入节点的算法_1","scratchTime":"2017-10-28 15:38:53.0","type":"leaf","flag":"fragment"},{"url":"","content":"<pre><span class=\"cm\">/*当二元搜尋樹T中不存在关键字等于e.key的数据元素时，插入e并返回TRUE，否则返回FALSE*/</span>\n<span class=\"n\">Status</span> <span class=\"nf\">InsertBST</span><span class=\"p\">(</span><span class=\"n\">BiTree</span> <span class=\"o\">*</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">ElemType</span> <span class=\"n\">e</span><span class=\"p\">){</span>  \n      <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">T</span><span class=\"p\">)</span>  \n        <span class=\"p\">{</span>\t    \n            <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">BiTNode</span><span class=\"p\">;</span>\n            <span class=\"n\">s</span><span class=\"o\">-&gt;</span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">e</span><span class=\"p\">;</span> <span class=\"n\">s</span><span class=\"o\">-&gt;</span><span class=\"n\">lchild</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"o\">-&gt;</span><span class=\"n\">rchild</span> <span class=\"o\">=</span> <span class=\"nb\">NULL</span><span class=\"p\">;</span>\n            <span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">s</span><span class=\"p\">;</span>\t<span class=\"c1\">//被插節点*s为新的根结点</span>\n        <span class=\"p\">}</span>\n      <span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">key</span> <span class=\"o\">==</span> <span class=\"n\">T</span><span class=\"o\">-&gt;</span><span class=\"n\">data</span><span class=\"p\">.</span><span class=\"n\">key</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">false</span><span class=\"p\">;</span><span class=\"c1\">//关键字等于e.key的数据元素，返回錯誤</span>\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">key</span> <span class=\"o\">&lt;</span> <span class=\"n\">T</span><span class=\"o\">-&gt;</span><span class=\"n\">data</span><span class=\"p\">.</span><span class=\"n\">key</span><span class=\"p\">)</span>\n\t<span class=\"n\">InsertBST</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"o\">-&gt;</span><span class=\"n\">lchild</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">);</span>\t<span class=\"c1\">//將e插入左子樹</span>\n      <span class=\"k\">else</span> \n\t<span class=\"n\">InsertBST</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"o\">-&gt;</span><span class=\"n\">rchild</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">);</span>\t<span class=\"c1\">//將e插入右子樹</span>\n      <span class=\"k\">return</span> <span class=\"nb\">true</span><span class=\"p\">;</span>\n <span class=\"p\">}</span>\n</pre>","fragment_id":"在二叉搜索树插入节点的算法_2","scratchTime":"2017-10-28 15:38:53.0","type":"leaf","flag":"fragment"}]},{"totalbranchlevel":0,"facet_name":"在二叉查找树删除结点的算法","totalbranchnum":0,"type":"branch","totalleafnum":5,"children":[{"url":"","content":"<div class=\"thumbinner\" style=\"width: 482px;\">\n <a class=\"image\" href=\"/wiki/File:Binary_search_tree_delete.svg\"><img width=\"480\" height=\"137\" class=\"thumbimage\" alt=\"\" src=\"//upload.wikimedia.org/wikipedia/commons/thumb/4/46/Binary_search_tree_delete.svg/480px-Binary_search_tree_delete.svg.png\" data-file-height=\"600\" data-file-width=\"2109\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/4/46/Binary_search_tree_delete.svg/720px-Binary_search_tree_delete.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/4/46/Binary_search_tree_delete.svg/960px-Binary_search_tree_delete.svg.png 2x\" /></a> \n <div class=\"thumbcaption\"> \n  <div class=\"magnify\">\n   <a title=\"放大\" class=\"internal\" href=\"/wiki/File:Binary_search_tree_delete.svg\"></a>\n  </div> 删除一个有左、右子树的节点\n </div> \n</div>","fragment_id":"在二叉查找树删除结点的算法_1","scratchTime":"2017-10-28 15:38:53.0","type":"leaf","flag":"fragment"},{"url":"","content":"<li>若*p结点为叶子结点，即PL（左子树）和PR（右子树）均为空树。由于删去叶子结点不破坏整棵树的结构，则只需修改其双亲结点的指针即可。</li> \n<li>若*p结点只有左子树PL或右子树PR，此时只要令PL或PR直接成为其双亲结点*f的左子树（当*p是左子树）或右子树（当*p是右子树）即可，作此修改也不破坏二叉查找树的特性。</li> \n<li>若*p结点的左子树和右子树均不空。在删去*p之后，为保持其它元素之间的相对位置不变，可按中序遍历保持有序进行调整，可以有两种做法：其一是令*p的左子树为*f的左/右（依*p是*f的左子树还是右子树而定）子树，*s为*p左子树的最右下的结点，而*p的右子树为*s的右子树；其二是令*p的直接前驱（in-order predecessor）或直接后继（in-order successor）替代*p，然后再从二叉查找树中删去它的直接前驱（或直接后继）。</li>","fragment_id":"在二叉查找树删除结点的算法_2","scratchTime":"2017-10-28 15:38:53.0","type":"leaf","flag":"fragment"},{"url":"","content":"<pre><span class=\"n\">Status</span> <span class=\"nf\">DeleteBST</span><span class=\"p\">(</span><span class=\"n\">BiTree</span> <span class=\"o\">*</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">KeyType</span> <span class=\"n\">key</span><span class=\"p\">){</span>\n  <span class=\"c1\">//若二叉查找树T中存在关键字等于key的数据元素时，则删除该数据元素，并返回</span>\n  <span class=\"c1\">//TRUE；否则返回FALSE</span>\n  <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">T</span><span class=\"p\">)</span> \n    <span class=\"k\">return</span> <span class=\"nb\">false</span><span class=\"p\">;</span>\t<span class=\"c1\">//不存在关键字等于key的数据元素</span>\n  <span class=\"k\">else</span><span class=\"p\">{</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">key</span> <span class=\"o\">==</span> <span class=\"n\">T</span><span class=\"o\">-&gt;</span><span class=\"n\">data</span><span class=\"p\">.</span><span class=\"n\">key</span><span class=\"p\">)</span> <span class=\"p\">{</span> \t<span class=\"c1\">//  找到关键字等于key的数据元素</span>\n      <span class=\"k\">return</span> <span class=\"n\">Delete</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">key</span> <span class=\"o\">&lt;</span> <span class=\"n\">T</span><span class=\"o\">-&gt;</span><span class=\"n\">data</span><span class=\"p\">.</span><span class=\"n\">key</span><span class=\"p\">)</span>\n      <span class=\"k\">return</span> <span class=\"n\">DeleteBST</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"o\">-&gt;</span><span class=\"n\">lchild</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">);</span>\n    <span class=\"k\">else</span>\n      <span class=\"k\">return</span> <span class=\"n\">DeleteBST</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"o\">-&gt;</span><span class=\"n\">rchild</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">Status</span> <span class=\"nf\">Delete</span><span class=\"p\">(</span><span class=\"n\">BiTree</span> <span class=\"o\">*</span><span class=\"n\">p</span><span class=\"p\">){</span>\n  <span class=\"c1\">//该节点为叶子节点，直接删除</span>\n  <span class=\"n\">BiTree</span> <span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">s</span><span class=\"p\">;</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">rchild</span> <span class=\"o\">&amp;&amp;</span> <span class=\"o\">!</span><span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">lchild</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n      <span class=\"k\">delete</span> <span class=\"n\">p</span><span class=\"p\">;</span>\n      <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"nb\">NULL</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">rchild</span><span class=\"p\">){</span>\t<span class=\"c1\">//右子树空则只需重接它的左子树</span>\n    <span class=\"n\">q</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">lchild</span><span class=\"p\">;</span>\n    <span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">lchild</span><span class=\"o\">-&gt;</span><span class=\"n\">data</span><span class=\"p\">;</span>\n    <span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">lchild</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">lchild</span><span class=\"o\">-&gt;</span><span class=\"n\">lchild</span><span class=\"p\">;</span>\n    <span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">rchild</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">lchild</span><span class=\"o\">-&gt;</span><span class=\"n\">rchild</span><span class=\"p\">;</span>\n\n    <span class=\"k\">delete</span> <span class=\"n\">q</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">lchild</span><span class=\"p\">){</span>\t<span class=\"c1\">//左子树空只需重接它的右子树</span>\n    <span class=\"n\">q</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">rchild</span><span class=\"p\">;</span>\n    <span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">rchild</span><span class=\"o\">-&gt;</span><span class=\"n\">data</span><span class=\"p\">;</span>\n    <span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">lchild</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">rchild</span><span class=\"o\">-&gt;</span><span class=\"n\">lchild</span><span class=\"p\">;</span>\n    <span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">rchild</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">rchild</span><span class=\"o\">-&gt;</span><span class=\"n\">rchild</span><span class=\"p\">;</span>\n\n    <span class=\"k\">delete</span> <span class=\"n\">q</span><span class=\"p\">;</span>  <span class=\"p\">}</span>\n  <span class=\"k\">else</span><span class=\"p\">{</span>\t<span class=\"c1\">//左右子树均不空</span>\n    <span class=\"n\">q</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"p\">;</span> \n    <span class=\"n\">s</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">lchild</span><span class=\"p\">;</span>\n    <span class=\"k\">while</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">-&gt;</span><span class=\"n\">rchild</span><span class=\"p\">){</span> \n      <span class=\"n\">q</span><span class=\"o\">=</span><span class=\"n\">s</span><span class=\"p\">;</span> \n      <span class=\"n\">s</span><span class=\"o\">=</span><span class=\"n\">s</span><span class=\"o\">-&gt;</span><span class=\"n\">rchild</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\t<span class=\"c1\">//转左，然后向右到尽头</span>\n    <span class=\"n\">p</span><span class=\"o\">-&gt;</span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"o\">-&gt;</span><span class=\"n\">data</span><span class=\"p\">;</span>\t<span class=\"c1\">//s指向被删结点的“前驱”</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">!=</span><span class=\"n\">p</span><span class=\"p\">)</span>\t\n      <span class=\"n\">q</span><span class=\"o\">-&gt;</span><span class=\"n\">rchild</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"o\">-&gt;</span><span class=\"n\">lchild</span><span class=\"p\">;</span>\t<span class=\"c1\">//重接*q的右子树</span>\n    <span class=\"k\">else</span> \n      <span class=\"n\">q</span><span class=\"o\">-&gt;</span><span class=\"n\">lchild</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"o\">-&gt;</span><span class=\"n\">lchild</span><span class=\"p\">;</span>\t<span class=\"c1\">//重接*q的左子树</span>\n    <span class=\"k\">delete</span> <span class=\"n\">s</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">return</span> <span class=\"nb\">true</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre>","fragment_id":"在二叉查找树删除结点的算法_3","scratchTime":"2017-10-28 15:38:53.0","type":"leaf","flag":"fragment"},{"url":"","content":"在<a title=\"C语言\" href=\"/wiki/C%E8%AF%AD%E8%A8%80\">C语言</a>中有些编译器不支持为<code>struct Node</code> <a title=\"节点\" class=\"mw-redirect\" href=\"/wiki/%E8%8A%82%E7%82%B9\">节点</a>分配空间，声称这是一个不完全的结构，可使用一个指向该<code>Node</code>的<a title=\"指针\" class=\"mw-disambig\" href=\"/wiki/%E6%8C%87%E9%92%88\">指针</a>为之分配空间。","fragment_id":"在二叉查找树删除结点的算法_4","scratchTime":"2017-10-28 15:38:53.0","type":"leaf","flag":"fragment"},{"url":"","content":"<pre><span class=\"k\">def</span> <span class=\"nf\">find_min</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>   <span class=\"c1\"># Gets minimum node (leftmost leaf) in a subtree</span>\n    <span class=\"n\">current_node</span> <span class=\"o\">=</span> <span class=\"bp\">self</span>\n    <span class=\"k\">while</span> <span class=\"n\">current_node</span><span class=\"o\">.</span><span class=\"n\">left_child</span><span class=\"p\">:</span>\n        <span class=\"n\">current_node</span> <span class=\"o\">=</span> <span class=\"n\">current_node</span><span class=\"o\">.</span><span class=\"n\">left_child</span>\n    <span class=\"k\">return</span> <span class=\"n\">current_node</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">replace_node_in_parent</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">new_value</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">left_child</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">left_child</span> <span class=\"o\">=</span> <span class=\"n\">new_value</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">right_child</span> <span class=\"o\">=</span> <span class=\"n\">new_value</span>\n    <span class=\"k\">if</span> <span class=\"n\">new_value</span><span class=\"p\">:</span>\n        <span class=\"n\">new_value</span><span class=\"o\">.</span><span class=\"n\">parent</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parent</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">binary_tree_delete</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">key</span> <span class=\"o\">&lt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"p\">:</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">left_child</span><span class=\"o\">.</span><span class=\"n\">binary_tree_delete</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span>\n    <span class=\"k\">elif</span> <span class=\"n\">key</span> <span class=\"o\">&gt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"p\">:</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">right_child</span><span class=\"o\">.</span><span class=\"n\">binary_tree_delete</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span> <span class=\"c1\"># delete the key here</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">left_child</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">right_child</span><span class=\"p\">:</span> <span class=\"c1\"># if both children are present</span>\n            <span class=\"n\">successor</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">right_child</span><span class=\"o\">.</span><span class=\"n\">find_min</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"n\">successor</span><span class=\"o\">.</span><span class=\"n\">key</span>\n            <span class=\"n\">successor</span><span class=\"o\">.</span><span class=\"n\">binary_tree_delete</span><span class=\"p\">(</span><span class=\"n\">successor</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">left_child</span><span class=\"p\">:</span>   <span class=\"c1\"># if the node has only a *left* child</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">replace_node_in_parent</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">left_child</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">right_child</span><span class=\"p\">:</span>  <span class=\"c1\"># if the node has only a *right* child</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">replace_node_in_parent</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">right_child</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span> <span class=\"c1\"># this node has no children</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">replace_node_in_parent</span><span class=\"p\">(</span><span class=\"bp\">None</span><span class=\"p\">)</span>\n</pre>","fragment_id":"在二叉查找树删除结点的算法_5","scratchTime":"2017-10-28 15:38:53.0","type":"leaf","flag":"fragment"}]},{"totalbranchlevel":0,"facet_name":"二叉查找树的遍历","totalbranchnum":0,"type":"branch","totalleafnum":1,"children":[{"url":"","content":"<pre><span class=\"k\">def</span> <span class=\"nf\">traverse_binary_tree</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">,</span> <span class=\"n\">callback</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">node</span> <span class=\"ow\">is</span> <span class=\"bp\">None</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span>\n    <span class=\"n\">traverse_binary_tree</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">leftChild</span><span class=\"p\">,</span> <span class=\"n\">callback</span><span class=\"p\">)</span>\n    <span class=\"n\">callback</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span>\n    <span class=\"n\">traverse_binary_tree</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">rightChild</span><span class=\"p\">,</span> <span class=\"n\">callback</span><span class=\"p\">)</span>\n</pre>","fragment_id":"二叉查找树的遍历_1","scratchTime":"2017-10-28 15:38:53.0","type":"leaf","flag":"fragment"}]},{"totalbranchlevel":0,"facet_name":"排序（或称构造）一棵二叉查找树","totalbranchnum":0,"type":"branch","totalleafnum":2,"children":[{"url":"","content":"用一组数值建造一棵二叉查找树的同时，也把这组数值进行了排序。其最差时间复杂度为<span class=\"mwe-math-element\"><span class=\"mwe-math-mathml-inline mwe-math-mathml-a11y\" style=\"display: none;\">\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\"> \n   <semantics> \n    <mrow class=\"MJX-TeXAtom-ORD\"> \n     <mstyle scriptlevel=\"0\" displaystyle=\"true\"> \n      <mi>\n       O\n      </mi> \n      <mo stretchy=\"false\">\n       (\n      </mo> \n      <msup> \n       <mi>\n        n\n       </mi> \n       <mrow class=\"MJX-TeXAtom-ORD\"> \n        <mn>\n         2\n        </mn> \n       </mrow> \n      </msup> \n      <mo stretchy=\"false\">\n       )\n      </mo> \n     </mstyle> \n    </mrow> \n    <annotation encoding=\"application/x-tex\">\n     {\\displaystyle O(n^{2})}\n    </annotation> \n   </semantics> \n  </math></span><img class=\"mwe-math-fallback-image-inline\" aria-hidden=\"true\" style=\"width: 6.08ex; height: 3.17ex; vertical-align: -0.83ex;\" alt=\"O(n^{2})\" src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/6cd9594a16cb898b8f2a2dff9227a385ec183392\" /></span>。例如，若该组数值经是有序的（从小到大），则建造出来的二叉查找树的所有节点，都没有左子树。自平衡二叉查找树可以克服上述缺点，其时间复杂度为O(<i>n</i>log <i>n</i>)。一方面，树排序的问题使得CPU Cache性能较差，特别是当节点是动态内存分配时。而堆排序的CPU Cache性能较好。另一方面，树排序是最优的增量排序（incremental sorting）算法，保持一个数值序列的有序性。","fragment_id":"排序（或称构造）一棵二叉查找树_1","scratchTime":"2017-10-28 15:38:53.0","type":"leaf","flag":"fragment"},{"url":"","content":"<pre><span class=\"k\">def</span> <span class=\"nf\">build_binary_tree</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">):</span>\n    <span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n    <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">values</span><span class=\"p\">:</span>\n        <span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"n\">binary_tree_insert</span><span class=\"p\">(</span><span class=\"n\">tree</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">tree</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">get_inorder_traversal</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">):</span>\n    <span class=\"sd\">'''</span>\n<span class=\"sd\">    Returns a list containing all the values in the tree, starting at *root*.</span>\n<span class=\"sd\">    Traverses the tree in-order(leftChild, root, rightChild).</span>\n<span class=\"sd\">    '''</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">traverse_binary_tree</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"k\">lambda</span> <span class=\"n\">element</span><span class=\"p\">:</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">element</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"n\">result</span>\n</pre>","fragment_id":"排序（或称构造）一棵二叉查找树_2","scratchTime":"2017-10-28 15:38:53.0","type":"leaf","flag":"fragment"}]},{"totalbranchlevel":0,"facet_name":"二叉查找树性能分析","totalbranchnum":0,"type":"branch","totalleafnum":1,"children":[{"url":"","content":"每个结点的<span class=\"mwe-math-element\"><span class=\"mwe-math-mathml-inline mwe-math-mathml-a11y\" style=\"display: none;\">\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\"> \n   <semantics> \n    <mrow class=\"MJX-TeXAtom-ORD\"> \n     <mstyle scriptlevel=\"0\" displaystyle=\"true\"> \n      <msub> \n       <mi>\n        C\n       </mi> \n       <mrow class=\"MJX-TeXAtom-ORD\"> \n        <mi>\n         i\n        </mi> \n       </mrow> \n      </msub> \n     </mstyle> \n    </mrow> \n    <annotation encoding=\"application/x-tex\">\n     {\\displaystyle C_{i}}\n    </annotation> \n   </semantics> \n  </math></span><img class=\"mwe-math-fallback-image-inline\" aria-hidden=\"true\" style=\"width: 2.47ex; height: 2.5ex; vertical-align: -0.67ex;\" alt=\"C_i\" src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/cc49dc02c0ec8c86b67e7d10518ac791eda0bf22\" /></span>为该结点的层次数。最坏情况下，当先后插入的关键字有序时，构成的二叉查找树蜕变为<a title=\"单支树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E5%8D%95%E6%94%AF%E6%A0%91&amp;action=edit&amp;redlink=1\">单支树</a>，树的深度为<span class=\"mwe-math-element\"><span class=\"mwe-math-mathml-inline mwe-math-mathml-a11y\" style=\"display: none;\">\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\"> \n   <semantics> \n    <mrow class=\"MJX-TeXAtom-ORD\"> \n     <mstyle scriptlevel=\"0\" displaystyle=\"true\"> \n      <mi>\n       n\n      </mi> \n     </mstyle> \n    </mrow> \n    <annotation encoding=\"application/x-tex\">\n     {\\displaystyle n}\n    </annotation> \n   </semantics> \n  </math></span><img class=\"mwe-math-fallback-image-inline\" aria-hidden=\"true\" style=\"width: 1.4ex; height: 1.67ex; vertical-align: -0.33ex;\" alt=\"n\" src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/a601995d55609f2d9f5e233e36fbe9ea26011b3b\" /></span>，其平均查找长度为<span class=\"mwe-math-element\"><span class=\"mwe-math-mathml-inline mwe-math-mathml-a11y\" style=\"display: none;\">\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\"> \n   <semantics> \n    <mrow class=\"MJX-TeXAtom-ORD\"> \n     <mstyle scriptlevel=\"0\" displaystyle=\"true\"> \n      <mrow class=\"MJX-TeXAtom-ORD\"> \n       <mfrac> \n        <mrow> \n         <mi>\n          n\n         </mi> \n         <mo>\n          +\n         </mo> \n         <mn>\n          1\n         </mn> \n        </mrow> \n        <mn>\n         2\n        </mn> \n       </mfrac> \n      </mrow> \n     </mstyle> \n    </mrow> \n    <annotation encoding=\"application/x-tex\">\n     {\\displaystyle {\\frac {n+1}{2}}}\n    </annotation> \n   </semantics> \n  </math></span><img class=\"mwe-math-fallback-image-inline\" aria-hidden=\"true\" style=\"width: 6.26ex; height: 5.17ex; vertical-align: -1.83ex;\" alt=\"\\frac{n+1}{2}\" src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/4453d9f4a784834dcbdd7d1dfbe8724094d940dc\" /></span>（和顺序查找相同），最好的情况是二叉查找树的形态和折半查找的判定树相同，其平均查找长度和<span class=\"mwe-math-element\"><span class=\"mwe-math-mathml-inline mwe-math-mathml-a11y\" style=\"display: none;\">\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\"> \n   <semantics> \n    <mrow class=\"MJX-TeXAtom-ORD\"> \n     <mstyle scriptlevel=\"0\" displaystyle=\"true\"> \n      <msub> \n       <mi>\n        log\n       </mi> \n       <mrow class=\"MJX-TeXAtom-ORD\"> \n        <mn>\n         2\n        </mn> \n       </mrow> \n      </msub> \n      <mo>\n       ⁡\n       <!-- ⁡ -->\n      </mo> \n      <mo stretchy=\"false\">\n       (\n      </mo> \n      <mi>\n       n\n      </mi> \n      <mo stretchy=\"false\">\n       )\n      </mo> \n     </mstyle> \n    </mrow> \n    <annotation encoding=\"application/x-tex\">\n     {\\displaystyle \\log _{2}(n)}\n    </annotation> \n   </semantics> \n  </math></span><img class=\"mwe-math-fallback-image-inline\" aria-hidden=\"true\" style=\"width: 7.3ex; height: 2.84ex; vertical-align: -0.83ex;\" alt=\"\\log_2(n)\" src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/f4e7727d9ed8daee1d80207aba949782dccf9547\" /></span>成正比（<span class=\"mwe-math-element\"><span class=\"mwe-math-mathml-inline mwe-math-mathml-a11y\" style=\"display: none;\">\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\"> \n   <semantics> \n    <mrow class=\"MJX-TeXAtom-ORD\"> \n     <mstyle scriptlevel=\"0\" displaystyle=\"true\"> \n      <mi>\n       O\n      </mi> \n      <mo stretchy=\"false\">\n       (\n      </mo> \n      <msub> \n       <mi>\n        log\n       </mi> \n       <mrow class=\"MJX-TeXAtom-ORD\"> \n        <mn>\n         2\n        </mn> \n       </mrow> \n      </msub> \n      <mo>\n       ⁡\n       <!-- ⁡ -->\n      </mo> \n      <mo stretchy=\"false\">\n       (\n      </mo> \n      <mi>\n       n\n      </mi> \n      <mo stretchy=\"false\">\n       )\n      </mo> \n      <mo stretchy=\"false\">\n       )\n      </mo> \n     </mstyle> \n    </mrow> \n    <annotation encoding=\"application/x-tex\">\n     {\\displaystyle O(\\log _{2}(n))}\n    </annotation> \n   </semantics> \n  </math></span><img class=\"mwe-math-fallback-image-inline\" aria-hidden=\"true\" style=\"width: 10.91ex; height: 2.84ex; vertical-align: -0.83ex;\" alt=\"O(\\log_2(n))\" src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/bca0626f9c0b4e0eef3953d0e11471c15c807079\" /></span>）。","fragment_id":"二叉查找树性能分析_1","scratchTime":"2017-10-28 15:38:53.0","type":"leaf","flag":"fragment"}]},{"totalbranchlevel":0,"facet_name":"二叉查找树的优化","totalbranchnum":0,"type":"branch","totalleafnum":5,"children":[{"url":"","content":"<li><a title=\"Size Balanced Tree（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Size_Balanced_Tree&amp;action=edit&amp;redlink=1\">Size Balanced Tree</a>(SBT)</li> \n<li><a title=\"加权平衡树\" href=\"/wiki/%E5%8A%A0%E6%9D%83%E5%B9%B3%E8%A1%A1%E6%A0%91\">加权平衡树</a>(WBT)</li> \n<li><a title=\"AVL树\" href=\"/wiki/AVL%E6%A0%91\">AVL树</a></li> \n<li><a title=\"红黑树\" href=\"/wiki/%E7%BA%A2%E9%BB%91%E6%A0%91\">红黑树</a></li> \n<li><a title=\"Treap\" class=\"mw-redirect\" href=\"/wiki/Treap\">Treap</a>(Tree+Heap)</li>","fragment_id":"二叉查找树的优化_1","scratchTime":"2017-10-28 15:38:53.0","type":"leaf","flag":"fragment"},{"url":"","content":"这些均可以使查找树的高度为<span class=\"mwe-math-element\"><span class=\"mwe-math-mathml-inline mwe-math-mathml-a11y\" style=\"display: none;\">\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\"> \n   <semantics> \n    <mrow class=\"MJX-TeXAtom-ORD\"> \n     <mstyle scriptlevel=\"0\" displaystyle=\"true\"> \n      <mi>\n       O\n      </mi> \n      <mo stretchy=\"false\">\n       (\n      </mo> \n      <mi>\n       log\n      </mi> \n      <mo>\n       ⁡\n       <!-- ⁡ -->\n      </mo> \n      <mo stretchy=\"false\">\n       (\n      </mo> \n      <mi>\n       n\n      </mi> \n      <mo stretchy=\"false\">\n       )\n      </mo> \n      <mo stretchy=\"false\">\n       )\n      </mo> \n     </mstyle> \n    </mrow> \n    <annotation encoding=\"application/x-tex\">\n     {\\displaystyle O(\\log(n))}\n    </annotation> \n   </semantics> \n  </math></span><img class=\"mwe-math-fallback-image-inline\" aria-hidden=\"true\" style=\"width: 9.85ex; height: 2.84ex; vertical-align: -0.83ex;\" alt=\"O(\\log(n))\" src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/7d3f404959a75e486669fd7618e00046eb00bb24\" /></span>","fragment_id":"二叉查找树的优化_2","scratchTime":"2017-10-28 15:38:53.0","type":"leaf","flag":"fragment"},{"url":"","content":"<span id=\"参见\"></span><span class=\"mw-headline\" id=\".E5.8F.82.E8.A7.81\">参见</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a title=\"编辑小节：参见\" href=\"/w/index.php?title=%E4%BA%8C%E5%85%83%E6%90%9C%E5%B0%8B%E6%A8%B9&amp;action=edit&amp;section=8\">编辑</a><span class=\"mw-editsection-bracket\">]</span></span>","fragment_id":"二叉查找树的优化_3","scratchTime":"2017-10-28 15:38:53.0","type":"leaf","flag":"fragment"},{"url":"","content":"<tbody>\n <tr> \n  <td style=\"padding: 2px;\"> \n   <table class=\"nowraplinks collapsible autocollapse navbox-inner\" id=\"collapsibleTable0\" style=\"background: none; color: inherit; border-spacing: 0;\" cellspacing=\"0\"> \n    <tbody>\n     <tr> \n      <th class=\"navbox-title\" colspan=\"2\" scope=\"col\"><span class=\"collapseButton\">[<a id=\"collapseButton0\" href=\"#\">显示</a>]</span> \n       <div class=\"plainlinks hlist navbar mini\"> \n        <ul> \n         <li class=\"nv-view\"><a title=\"Template:计算机科学中的树\" href=\"/wiki/Template:%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%AD%E7%9A%84%E6%A0%91\"><abbr title=\"查看该模板\" style=\"background: none; border: currentColor; border-image: none;\">查</abbr></a></li> \n         <li class=\"nv-talk\"><a title=\"Template talk:计算机科学中的树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Template_talk:%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%AD%E7%9A%84%E6%A0%91&amp;action=edit&amp;redlink=1\"><abbr title=\"讨论该模板\" style=\"background: none; border: currentColor; border-image: none;\">论</abbr></a></li> \n         <li class=\"nv-edit\"><a class=\"external text\" href=\"//zh.wikipedia.org/w/index.php?title=Template:%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%AD%E7%9A%84%E6%A0%91&amp;action=edit\"><abbr title=\"编辑该模板\" style=\"background: none; border: currentColor; border-image: none;\">编</abbr></a></li> \n        </ul> \n       </div> \n       <div style=\"font-size: 110%;\">\n        <a title=\"计算机科学\" href=\"/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6\">计算机科学</a>中的\n        <a title=\"树 (数据结构)\" href=\"/wiki/%E6%A0%91_(%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)\">树</a>\n       </div> </th> \n     </tr> \n     <tr style=\"height: 2px; display: none;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr style=\"display: none;\"> \n      <th class=\"navbox-group\" scope=\"row\"><a title=\"二叉树\" href=\"/wiki/%E4%BA%8C%E5%8F%89%E6%A0%91\">二叉树</a></th> \n      <td class=\"navbox-list navbox-odd hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><a class=\"mw-selflink selflink\">二叉查找树（BST）</a></li> \n         <li><a title=\"笛卡尔树\" href=\"/wiki/%E7%AC%9B%E5%8D%A1%E5%B0%94%E6%A0%91\">笛卡尔树</a></li> \n         <li><a title=\"MVP树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=MVP%E6%A0%91&amp;action=edit&amp;redlink=1\">MVP树</a></li> \n         <li><a title=\"Top tree（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Top_tree&amp;action=edit&amp;redlink=1\">Top tree</a></li> \n         <li><a title=\"T树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=T%E6%A0%91&amp;action=edit&amp;redlink=1\">T树</a></li> \n        </ul> \n       </div> </td> \n     </tr> \n     <tr style=\"height: 2px; display: none;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr style=\"display: none;\"> \n      <th class=\"navbox-group\" scope=\"row\"><a title=\"自平衡二叉查找树\" class=\"mw-redirect\" href=\"/wiki/%E8%87%AA%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91\">自平衡二叉查找树</a></th> \n      <td class=\"navbox-list navbox-even hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><a title=\"AA树\" href=\"/wiki/AA%E6%A0%91\">AA树</a></li> \n         <li><a title=\"AVL树\" href=\"/wiki/AVL%E6%A0%91\">AVL树</a></li> \n         <li><a title=\"左倾红黑树\" href=\"/wiki/%E5%B7%A6%E5%80%BE%E7%BA%A2%E9%BB%91%E6%A0%91\">左倾红黑树</a></li> \n         <li><a title=\"红黑树\" href=\"/wiki/%E7%BA%A2%E9%BB%91%E6%A0%91\">红黑树</a></li> \n         <li><a title=\"替罪羊树\" href=\"/wiki/%E6%9B%BF%E7%BD%AA%E7%BE%8A%E6%A0%91\">替罪羊树</a></li> \n         <li><a title=\"伸展树\" href=\"/wiki/%E4%BC%B8%E5%B1%95%E6%A0%91\">伸展树</a></li> \n         <li><a title=\"树堆\" href=\"/wiki/%E6%A0%91%E5%A0%86\">树堆</a></li> \n         <li><a title=\"加权平衡树\" href=\"/wiki/%E5%8A%A0%E6%9D%83%E5%B9%B3%E8%A1%A1%E6%A0%91\">加权平衡树</a></li> \n        </ul> \n       </div> </td> \n     </tr> \n     <tr style=\"height: 2px; display: none;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr style=\"display: none;\"> \n      <th class=\"navbox-group\" scope=\"row\"><a title=\"B树\" href=\"/wiki/B%E6%A0%91\">B树</a></th> \n      <td class=\"navbox-list navbox-odd hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><a title=\"B+树\" href=\"/wiki/B%2B%E6%A0%91\">B+树</a></li> \n         <li><a title=\"B*树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=B*%E6%A0%91&amp;action=edit&amp;redlink=1\">B*树</a></li> \n         <li><a title=\"Bx树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Bx%E6%A0%91&amp;action=edit&amp;redlink=1\">B<small><sup>x</sup></small>树</a></li> \n         <li><a title=\"UB树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=UB%E6%A0%91&amp;action=edit&amp;redlink=1\">UB树</a></li> \n         <li><a title=\"2-3树\" href=\"/wiki/2-3%E6%A0%91\">2-3树</a></li> \n         <li><a title=\"2-3-4树\" href=\"/wiki/2-3-4%E6%A0%91\">2-3-4树</a></li> \n         <li><a title=\"(a,b)-树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=(a,b)-%E6%A0%91&amp;action=edit&amp;redlink=1\">(a,b)-树</a></li> \n         <li><a title=\"Dancing tree（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Dancing_tree&amp;action=edit&amp;redlink=1\">Dancing tree</a></li> \n         <li><a title=\"H树\" href=\"/wiki/H%E6%A0%91\">H树</a></li> \n        </ul> \n       </div> </td> \n     </tr> \n     <tr style=\"height: 2px; display: none;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr style=\"display: none;\"> \n      <th class=\"navbox-group\" scope=\"row\"><a title=\"堆 (数据结构)\" href=\"/wiki/%E5%A0%86_(%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)\">堆</a></th> \n      <td class=\"navbox-list navbox-even hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><a title=\"二叉堆\" href=\"/wiki/%E4%BA%8C%E5%8F%89%E5%A0%86\">二叉堆</a></li> \n         <li><a title=\"二项堆\" href=\"/wiki/%E4%BA%8C%E9%A1%B9%E5%A0%86\">二项堆</a></li> \n         <li><a title=\"斐波那契堆\" href=\"/wiki/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E5%A0%86\">斐波那契堆</a></li> \n         <li><a title=\"左偏树\" href=\"/wiki/%E5%B7%A6%E5%81%8F%E6%A0%91\">左偏树</a></li> \n         <li><a title=\"Pairing heap（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Pairing_heap&amp;action=edit&amp;redlink=1\">Pairing heap</a></li> \n         <li><a title=\"斜堆\" href=\"/wiki/%E6%96%9C%E5%A0%86\">斜堆</a></li> \n         <li><a title=\"Van Emde Boas tree（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Van_Emde_Boas_tree&amp;action=edit&amp;redlink=1\">Van Emde Boas tree</a></li> \n        </ul> \n       </div> </td> \n     </tr> \n     <tr style=\"height: 2px; display: none;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr style=\"display: none;\"> \n      <th class=\"navbox-group\" scope=\"row\"><a title=\"Trie\" href=\"/wiki/Trie\">Trie</a></th> \n      <td class=\"navbox-list navbox-odd hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><a title=\"后缀树\" href=\"/wiki/%E5%90%8E%E7%BC%80%E6%A0%91\">后缀树</a></li> \n         <li><a title=\"基数树\" href=\"/wiki/%E5%9F%BA%E6%95%B0%E6%A0%91\">基数树</a></li> \n         <li><a title=\"三元搜索树\" href=\"/wiki/%E4%B8%89%E5%85%83%E6%90%9C%E7%B4%A2%E6%A0%91\">三叉查找树</a></li> \n         <li><a title=\"X-快速前缀树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=X-%E5%BF%AB%E9%80%9F%E5%89%8D%E7%BC%80%E6%A0%91&amp;action=edit&amp;redlink=1\">X-快速前缀树</a></li> \n         <li><a title=\"Y-快速前缀树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Y-%E5%BF%AB%E9%80%9F%E5%89%8D%E7%BC%80%E6%A0%91&amp;action=edit&amp;redlink=1\">Y-快速前缀树</a></li> \n        </ul> \n       </div> </td> \n     </tr> \n     <tr style=\"height: 2px; display: none;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr style=\"display: none;\"> \n      <th class=\"navbox-group\" scope=\"row\"><a title=\"二叉空间分割（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E4%BA%8C%E5%8F%89%E7%A9%BA%E9%97%B4%E5%88%86%E5%89%B2&amp;action=edit&amp;redlink=1\">二叉空间分割（BSP）</a>树</th> \n      <td class=\"navbox-list navbox-even hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><a title=\"四叉树\" href=\"/wiki/%E5%9B%9B%E5%8F%89%E6%A0%91\">四叉树</a></li> \n         <li><a title=\"八叉树\" href=\"/wiki/%E5%85%AB%E5%8F%89%E6%A0%91\">八叉树</a></li> \n         <li><a title=\"K-d树\" href=\"/wiki/K-d%E6%A0%91\"><i>k</i>-d树</a></li> \n         <li><a title=\"隐式k-d树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E9%9A%90%E5%BC%8Fk-d%E6%A0%91&amp;action=edit&amp;redlink=1\">隐式<i>k</i>-d树</a></li> \n         <li><a title=\"VP树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=VP%E6%A0%91&amp;action=edit&amp;redlink=1\">VP树</a></li> \n        </ul> \n       </div> </td> \n     </tr> \n     <tr style=\"height: 2px; display: none;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr style=\"display: none;\"> \n      <th class=\"navbox-group\" scope=\"row\">非二叉树</th> \n      <td class=\"navbox-list navbox-odd hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><a title=\"指数树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E6%8C%87%E6%95%B0%E6%A0%91&amp;action=edit&amp;redlink=1\">指数树</a></li> \n         <li><a title=\"融合树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E8%9E%8D%E5%90%88%E6%A0%91&amp;action=edit&amp;redlink=1\">融合树</a></li> \n         <li><a title=\"区间树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E5%8C%BA%E9%97%B4%E6%A0%91&amp;action=edit&amp;redlink=1\">区间树</a></li> \n         <li><a title=\"PQ树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=PQ%E6%A0%91&amp;action=edit&amp;redlink=1\">PQ树</a></li> \n         <li><a title=\"Range tree（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Range_tree&amp;action=edit&amp;redlink=1\">Range tree</a></li> \n         <li><a title=\"SPQR树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=SPQR%E6%A0%91&amp;action=edit&amp;redlink=1\">SPQR树</a></li> \n        </ul> \n       </div> </td> \n     </tr> \n     <tr style=\"height: 2px; display: none;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr style=\"display: none;\"> \n      <th class=\"navbox-group\" scope=\"row\"><a title=\"空间数据库（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E7%A9%BA%E9%97%B4%E6%95%B0%E6%8D%AE%E5%BA%93&amp;action=edit&amp;redlink=1\">空间</a>数据分割树</th> \n      <td class=\"navbox-list navbox-even hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><a title=\"R树\" href=\"/wiki/R%E6%A0%91\">R树</a></li> \n         <li><a title=\"R*树\" href=\"/wiki/R*%E6%A0%91\">R*树</a></li> \n         <li><a title=\"R+树\" href=\"/wiki/R%2B%E6%A0%91\">R+树</a></li> \n         <li><a title=\"X树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=X%E6%A0%91&amp;action=edit&amp;redlink=1\">X树</a></li> \n         <li><a title=\"M树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=M%E6%A0%91&amp;action=edit&amp;redlink=1\">M树</a></li> \n         <li><a title=\"线段树 (储存区间)\" href=\"/wiki/%E7%B7%9A%E6%AE%B5%E6%A8%B9_(%E5%84%B2%E5%AD%98%E5%8D%80%E9%96%93)\">线段树</a></li> \n         <li><a title=\"希尔伯特R树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E5%B8%8C%E5%B0%94%E4%BC%AF%E7%89%B9R%E6%A0%91&amp;action=edit&amp;redlink=1\">希尔伯特R树</a></li> \n         <li><a title=\"优先R树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E4%BC%98%E5%85%88R%E6%A0%91&amp;action=edit&amp;redlink=1\">优先R树</a></li> \n        </ul> \n       </div> </td> \n     </tr> \n     <tr style=\"height: 2px; display: none;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr style=\"display: none;\"> \n      <th class=\"navbox-group\" scope=\"row\">其他树</th> \n      <td class=\"navbox-list navbox-odd hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><a title=\"散列日历（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E6%95%A3%E5%88%97%E6%97%A5%E5%8E%86&amp;action=edit&amp;redlink=1\">散列日历</a></li> \n         <li><a title=\"散列树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E6%95%A3%E5%88%97%E6%A0%91&amp;action=edit&amp;redlink=1\">散列树</a></li> \n         <li><a title=\"Finger tree（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Finger_tree&amp;action=edit&amp;redlink=1\">Finger tree</a></li> \n         <li><a title=\"Order statistic tree（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Order_statistic_tree&amp;action=edit&amp;redlink=1\">Order statistic tree</a></li> \n         <li><a title=\"Metric tree（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Metric_tree&amp;action=edit&amp;redlink=1\">Metric tree</a></li> \n         <li><a title=\"Cover tree（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Cover_tree&amp;action=edit&amp;redlink=1\">Cover tree</a></li> \n         <li><a title=\"BK树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=BK%E6%A0%91&amp;action=edit&amp;redlink=1\">BK树</a></li> \n         <li><a title=\"Doubly chained tree（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Doubly_chained_tree&amp;action=edit&amp;redlink=1\">Doubly chained tree</a></li> \n         <li><a title=\"IDistance（页面不存在）\" class=\"new\" href=\"/w/index.php?title=IDistance&amp;action=edit&amp;redlink=1\">iDistance</a></li> \n         <li><a title=\"Link-cut tree（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Link-cut_tree&amp;action=edit&amp;redlink=1\">Link-cut tree</a></li> \n         <li><a title=\"Log-structured merge-tree（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Log-structured_merge-tree&amp;action=edit&amp;redlink=1\">Log-structured merge-tree</a></li> \n         <li><a title=\"树状数组\" href=\"/wiki/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84\">树状数组</a></li> \n        </ul> \n       </div> </td> \n     </tr> \n    </tbody>\n   </table> </td> \n </tr> \n</tbody>","fragment_id":"二叉查找树的优化_4","scratchTime":"2017-10-28 15:38:53.0","type":"leaf","flag":"fragment"},{"url":"","content":"<tbody>\n <tr> \n  <td style=\"padding: 2px;\"> \n   <table class=\"nowraplinks collapsible autocollapse navbox-inner\" id=\"collapsibleTable1\" style=\"background: none; color: inherit; border-spacing: 0;\" cellspacing=\"0\"> \n    <tbody>\n     <tr> \n      <th class=\"navbox-title\" colspan=\"2\" scope=\"col\"><span class=\"collapseButton\">[<a id=\"collapseButton1\" href=\"#\">显示</a>]</span> \n       <div class=\"plainlinks hlist navbar mini\"> \n        <ul> \n         <li class=\"nv-view\"><a title=\"Template:排序算法\" href=\"/wiki/Template:%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95\"><abbr title=\"查看该模板\" style=\"background: none; border: currentColor; border-image: none;\">查</abbr></a></li> \n         <li class=\"nv-talk\"><a title=\"Template talk:排序算法\" href=\"/wiki/Template_talk:%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95\"><abbr title=\"讨论该模板\" style=\"background: none; border: currentColor; border-image: none;\">论</abbr></a></li> \n         <li class=\"nv-edit\"><a class=\"external text\" href=\"//zh.wikipedia.org/w/index.php?title=Template:%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95&amp;action=edit\"><abbr title=\"编辑该模板\" style=\"background: none; border: currentColor; border-image: none;\">编</abbr></a></li> \n        </ul> \n       </div> \n       <div style=\"font-size: 110%;\">\n        <a title=\"排序算法\" href=\"/wiki/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95\">排序算法</a>\n       </div> </th> \n     </tr> \n     <tr style=\"height: 2px; display: none;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr style=\"display: none;\"> \n      <th class=\"navbox-group\" scope=\"row\">理论</th> \n      <td class=\"navbox-list navbox-odd hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><a title=\"计算复杂性理论\" class=\"mw-redirect\" href=\"/wiki/%E8%AE%A1%E7%AE%97%E5%A4%8D%E6%9D%82%E6%80%A7%E7%90%86%E8%AE%BA\">计算复杂性理论</a></li> \n         <li><a title=\"大O符号\" href=\"/wiki/%E5%A4%A7O%E7%AC%A6%E5%8F%B7\">大O符号</a></li> \n         <li><a title=\"全序关系\" href=\"/wiki/%E5%85%A8%E5%BA%8F%E5%85%B3%E7%B3%BB\">全序关系</a></li> \n         <li><a title=\"列表 (计算器)（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E5%88%97%E8%A1%A8_(%E8%AE%A1%E7%AE%97%E5%99%A8)&amp;action=edit&amp;redlink=1\">列表</a></li> \n         <li><a title=\"排序算法\" href=\"/wiki/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95#.E7.A8.B3.E5.AE.9A.E6.80.A7\">稳定性</a></li> \n         <li><a title=\"比较排序\" href=\"/wiki/%E6%AF%94%E8%BE%83%E6%8E%92%E5%BA%8F\">比较排序</a></li> \n         <li><a title=\"自适应排序（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E8%87%AA%E9%80%82%E5%BA%94%E6%8E%92%E5%BA%8F&amp;action=edit&amp;redlink=1\">自适应排序</a></li> \n         <li><a title=\"排序网络（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E6%8E%92%E5%BA%8F%E7%BD%91%E7%BB%9C&amp;action=edit&amp;redlink=1\">排序网络</a></li> \n         <li><a title=\"整数排序（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E6%95%B4%E6%95%B0%E6%8E%92%E5%BA%8F&amp;action=edit&amp;redlink=1\">整数排序</a></li> \n        </ul> \n       </div> </td> \n     </tr> \n     <tr style=\"height: 2px; display: none;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr style=\"display: none;\"> \n      <th class=\"navbox-group\" scope=\"row\">交换排序</th> \n      <td class=\"navbox-list navbox-even hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><a title=\"冒泡排序\" href=\"/wiki/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F\">冒泡排序</a></li> \n         <li><a title=\"鸡尾酒排序\" href=\"/wiki/%E9%B8%A1%E5%B0%BE%E9%85%92%E6%8E%92%E5%BA%8F\">鸡尾酒排序</a></li> \n         <li><a title=\"奇偶排序\" href=\"/wiki/%E5%A5%87%E5%81%B6%E6%8E%92%E5%BA%8F\">奇偶排序</a></li> \n         <li><a title=\"梳排序\" href=\"/wiki/%E6%A2%B3%E6%8E%92%E5%BA%8F\">梳排序</a></li> \n         <li><span class=\"ilh-all\" data-foreign-title=\"Gnome sort\" data-lang-name=\"英语\" data-lang-code=\"en\" data-orig-title=\"侏儒排序\"><span class=\"ilh-page\"><a class=\"new\" href=\"/w/index.php?title=%E4%BE%8F%E5%84%92%E6%8E%92%E5%BA%8F&amp;action=edit&amp;redlink=1\" original-title=\"侏儒排序（页面不存在）\">侏儒排序</a></span><span class=\"noprint ilh-comment\">（<span class=\"ilh-lang\">英语</span><span class=\"ilh-colon\">：</span><span class=\"ilh-link\"><a title=\"en:Gnome sort\" class=\"extiw\" href=\"https://en.wikipedia.org/wiki/Gnome_sort\"><span lang=\"en\" dir=\"auto\" xml:lang=\"en\">Gnome sort</span></a></span>）</span></span></li> \n         <li><a title=\"快速排序\" href=\"/wiki/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F\">快速排序</a></li> \n         <li><a title=\"臭皮匠排序\" href=\"/wiki/%E8%87%AD%E7%9A%AE%E5%8C%A0%E6%8E%92%E5%BA%8F\">臭皮匠排序</a></li> \n         <li><a title=\"Bogo排序\" href=\"/wiki/Bogo%E6%8E%92%E5%BA%8F\">Bogo排序</a></li> \n        </ul> \n       </div> </td> \n     </tr> \n     <tr style=\"height: 2px; display: none;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr style=\"display: none;\"> \n      <th class=\"navbox-group\" scope=\"row\">选择排序</th> \n      <td class=\"navbox-list navbox-odd hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><a title=\"选择排序\" href=\"/wiki/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F\">选择排序</a></li> \n         <li><a title=\"堆排序\" href=\"/wiki/%E5%A0%86%E6%8E%92%E5%BA%8F\">堆排序</a></li> \n         <li><span class=\"ilh-all\" data-foreign-title=\"Smoothsort\" data-lang-name=\"英语\" data-lang-code=\"en\" data-orig-title=\"平滑排序\"><span class=\"ilh-page\"><a class=\"new\" href=\"/w/index.php?title=%E5%B9%B3%E6%BB%91%E6%8E%92%E5%BA%8F&amp;action=edit&amp;redlink=1\" original-title=\"平滑排序（页面不存在）\">平滑排序</a></span><span class=\"noprint ilh-comment\">（<span class=\"ilh-lang\">英语</span><span class=\"ilh-colon\">：</span><span class=\"ilh-link\"><a title=\"en:Smoothsort\" class=\"extiw\" href=\"https://en.wikipedia.org/wiki/Smoothsort\"><span lang=\"en\" dir=\"auto\" xml:lang=\"en\">Smoothsort</span></a></span>）</span></span></li> \n         <li><span class=\"ilh-all\" data-foreign-title=\"Cartesian tree sort\" data-lang-name=\"英语\" data-lang-code=\"en\" data-orig-title=\"笛卡尔树排序\"><span class=\"ilh-page\"><a class=\"new\" href=\"/w/index.php?title=%E7%AC%9B%E5%8D%A1%E5%B0%94%E6%A0%91%E6%8E%92%E5%BA%8F&amp;action=edit&amp;redlink=1\" original-title=\"笛卡尔树排序（页面不存在）\">笛卡尔树排序</a></span><span class=\"noprint ilh-comment\">（<span class=\"ilh-lang\">英语</span><span class=\"ilh-colon\">：</span><span class=\"ilh-link\"><a title=\"en:Cartesian tree sort\" class=\"extiw\" href=\"https://en.wikipedia.org/wiki/Cartesian_tree_sort\"><span lang=\"en\" dir=\"auto\" xml:lang=\"en\">Cartesian tree sort</span></a></span>）</span></span></li> \n         <li><span class=\"ilh-all\" data-foreign-title=\"Tournament sort\" data-lang-name=\"英语\" data-lang-code=\"en\" data-orig-title=\"锦标赛排序\"><span class=\"ilh-page\"><a class=\"new\" href=\"/w/index.php?title=%E9%94%A6%E6%A0%87%E8%B5%9B%E6%8E%92%E5%BA%8F&amp;action=edit&amp;redlink=1\" original-title=\"锦标赛排序（页面不存在）\">锦标赛排序</a></span><span class=\"noprint ilh-comment\">（<span class=\"ilh-lang\">英语</span><span class=\"ilh-colon\">：</span><span class=\"ilh-link\"><a title=\"en:Tournament sort\" class=\"extiw\" href=\"https://en.wikipedia.org/wiki/Tournament_sort\"><span lang=\"en\" dir=\"auto\" xml:lang=\"en\">Tournament sort</span></a></span>）</span></span></li> \n         <li><span class=\"ilh-all\" data-foreign-title=\"Cycle sort\" data-lang-name=\"英语\" data-lang-code=\"en\" data-orig-title=\"圈排序\"><span class=\"ilh-page\"><a class=\"new\" href=\"/w/index.php?title=%E5%9C%88%E6%8E%92%E5%BA%8F&amp;action=edit&amp;redlink=1\" original-title=\"圈排序（页面不存在）\">圈排序</a></span><span class=\"noprint ilh-comment\">（<span class=\"ilh-lang\">英语</span><span class=\"ilh-colon\">：</span><span class=\"ilh-link\"><a title=\"en:Cycle sort\" class=\"extiw\" href=\"https://en.wikipedia.org/wiki/Cycle_sort\"><span lang=\"en\" dir=\"auto\" xml:lang=\"en\">Cycle sort</span></a></span>）</span></span></li> \n        </ul> \n       </div> </td> \n     </tr> \n     <tr style=\"height: 2px; display: none;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr style=\"display: none;\"> \n      <th class=\"navbox-group\" scope=\"row\">插入排序</th> \n      <td class=\"navbox-list navbox-even hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><a title=\"插入排序\" href=\"/wiki/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F\">插入排序</a></li> \n         <li><a title=\"希尔排序\" href=\"/wiki/%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F\">希尔排序</a></li> \n         <li><a title=\"伸展树\" class=\"mw-redirect\" href=\"/wiki/%E4%BC%B8%E5%B1%95%E6%A8%B9\">伸展排序</a></li> \n         <li><a class=\"mw-selflink selflink\">二叉查找树排序</a></li> \n         <li><a title=\"图书馆排序\" href=\"/wiki/%E5%9B%BE%E4%B9%A6%E9%A6%86%E6%8E%92%E5%BA%8F\">图书馆排序</a></li> \n         <li><a title=\"耐心排序\" href=\"/wiki/%E8%80%90%E5%BF%83%E6%8E%92%E5%BA%8F\">耐心排序</a></li> \n        </ul> \n       </div> </td> \n     </tr> \n     <tr style=\"height: 2px; display: none;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr style=\"display: none;\"> \n      <th class=\"navbox-group\" scope=\"row\">归并排序</th> \n      <td class=\"navbox-list navbox-odd hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><a title=\"归并排序\" href=\"/wiki/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F\">归并排序</a></li> \n         <li><span class=\"ilh-all\" data-foreign-title=\"Cascade merge sort\" data-lang-name=\"英语\" data-lang-code=\"en\" data-orig-title=\"梯级归并排序\"><span class=\"ilh-page\"><a class=\"new\" href=\"/w/index.php?title=%E6%A2%AF%E7%BA%A7%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F&amp;action=edit&amp;redlink=1\" original-title=\"梯级归并排序（页面不存在）\">梯级归并排序</a></span><span class=\"noprint ilh-comment\">（<span class=\"ilh-lang\">英语</span><span class=\"ilh-colon\">：</span><span class=\"ilh-link\"><a title=\"en:Cascade merge sort\" class=\"extiw\" href=\"https://en.wikipedia.org/wiki/Cascade_merge_sort\"><span lang=\"en\" dir=\"auto\" xml:lang=\"en\">Cascade merge sort</span></a></span>）</span></span></li> \n         <li><span class=\"ilh-all\" data-foreign-title=\"Oscillating merge sort\" data-lang-name=\"英语\" data-lang-code=\"en\" data-orig-title=\"振荡归并排序\"><span class=\"ilh-page\"><a class=\"new\" href=\"/w/index.php?title=%E6%8C%AF%E8%8D%A1%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F&amp;action=edit&amp;redlink=1\" original-title=\"振荡归并排序（页面不存在）\">振荡归并排序</a></span><span class=\"noprint ilh-comment\">（<span class=\"ilh-lang\">英语</span><span class=\"ilh-colon\">：</span><span class=\"ilh-link\"><a title=\"en:Oscillating merge sort\" class=\"extiw\" href=\"https://en.wikipedia.org/wiki/Oscillating_merge_sort\"><span lang=\"en\" dir=\"auto\" xml:lang=\"en\">Oscillating merge sort</span></a></span>）</span></span></li> \n         <li><span class=\"ilh-all\" data-foreign-title=\"Polyphase merge sort\" data-lang-name=\"英语\" data-lang-code=\"en\" data-orig-title=\"多相归并排序\"><span class=\"ilh-page\"><a class=\"new\" href=\"/w/index.php?title=%E5%A4%9A%E7%9B%B8%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F&amp;action=edit&amp;redlink=1\" original-title=\"多相归并排序（页面不存在）\">多相归并排序</a></span><span class=\"noprint ilh-comment\">（<span class=\"ilh-lang\">英语</span><span class=\"ilh-colon\">：</span><span class=\"ilh-link\"><a title=\"en:Polyphase merge sort\" class=\"extiw\" href=\"https://en.wikipedia.org/wiki/Polyphase_merge_sort\"><span lang=\"en\" dir=\"auto\" xml:lang=\"en\">Polyphase merge sort</span></a></span>）</span></span></li> \n         <li><a title=\"串列排序（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E4%B8%B2%E5%88%97%E6%8E%92%E5%BA%8F&amp;action=edit&amp;redlink=1\">串列排序</a></li> \n        </ul> \n       </div> </td> \n     </tr> \n     <tr style=\"height: 2px; display: none;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr style=\"display: none;\"> \n      <th class=\"navbox-group\" scope=\"row\">分布排序</th> \n      <td class=\"navbox-list navbox-even hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><span class=\"ilh-all\" data-foreign-title=\"American flag sort\" data-lang-name=\"英语\" data-lang-code=\"en\" data-orig-title=\"美国旗帜排序\"><span class=\"ilh-page\"><a class=\"new\" href=\"/w/index.php?title=%E7%BE%8E%E5%9B%BD%E6%97%97%E5%B8%9C%E6%8E%92%E5%BA%8F&amp;action=edit&amp;redlink=1\" original-title=\"美国旗帜排序（页面不存在）\">美国旗帜排序</a></span><span class=\"noprint ilh-comment\">（<span class=\"ilh-lang\">英语</span><span class=\"ilh-colon\">：</span><span class=\"ilh-link\"><a title=\"en:American flag sort\" class=\"extiw\" href=\"https://en.wikipedia.org/wiki/American_flag_sort\"><span lang=\"en\" dir=\"auto\" xml:lang=\"en\">American flag sort</span></a></span>）</span></span></li> \n         <li><a title=\"珠排序\" href=\"/wiki/%E7%8F%A0%E6%8E%92%E5%BA%8F\">珠排序</a></li> \n         <li><a title=\"桶排序\" href=\"/wiki/%E6%A1%B6%E6%8E%92%E5%BA%8F\">桶排序</a></li> \n         <li><span class=\"ilh-all\" data-foreign-title=\"Burstsort\" data-lang-name=\"英语\" data-lang-code=\"en\" data-orig-title=\"爆炸排序\"><span class=\"ilh-page\"><a class=\"new\" href=\"/w/index.php?title=%E7%88%86%E7%82%B8%E6%8E%92%E5%BA%8F&amp;action=edit&amp;redlink=1\" original-title=\"爆炸排序（页面不存在）\">爆炸排序</a></span><span class=\"noprint ilh-comment\">（<span class=\"ilh-lang\">英语</span><span class=\"ilh-colon\">：</span><span class=\"ilh-link\"><a title=\"en:Burstsort\" class=\"extiw\" href=\"https://en.wikipedia.org/wiki/Burstsort\"><span lang=\"en\" dir=\"auto\" xml:lang=\"en\">Burstsort</span></a></span>）</span></span></li> \n         <li><a title=\"计数排序\" href=\"/wiki/%E8%AE%A1%E6%95%B0%E6%8E%92%E5%BA%8F\">计数排序</a></li> \n         <li><a title=\"鸽巢排序\" href=\"/wiki/%E9%B8%BD%E5%B7%A2%E6%8E%92%E5%BA%8F\">鸽巢排序</a></li> \n         <li><span class=\"ilh-all\" data-foreign-title=\"Proxmap sort\" data-lang-name=\"英语\" data-lang-code=\"en\" data-orig-title=\"相邻图排序\"><span class=\"ilh-page\"><a class=\"new\" href=\"/w/index.php?title=%E7%9B%B8%E9%82%BB%E5%9B%BE%E6%8E%92%E5%BA%8F&amp;action=edit&amp;redlink=1\" original-title=\"相邻图排序（页面不存在）\">相邻图排序</a></span><span class=\"noprint ilh-comment\">（<span class=\"ilh-lang\">英语</span><span class=\"ilh-colon\">：</span><span class=\"ilh-link\"><a title=\"en:Proxmap sort\" class=\"extiw\" href=\"https://en.wikipedia.org/wiki/Proxmap_sort\"><span lang=\"en\" dir=\"auto\" xml:lang=\"en\">Proxmap sort</span></a></span>）</span></span></li> \n         <li><a title=\"基数排序\" href=\"/wiki/%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F\">基数排序</a></li> \n         <li><span class=\"ilh-all\" data-foreign-title=\"Flashsort\" data-lang-name=\"英语\" data-lang-code=\"en\" data-orig-title=\"闪电排序\"><span class=\"ilh-page\"><a class=\"new\" href=\"/w/index.php?title=%E9%97%AA%E7%94%B5%E6%8E%92%E5%BA%8F&amp;action=edit&amp;redlink=1\" original-title=\"闪电排序（页面不存在）\">闪电排序</a></span><span class=\"noprint ilh-comment\">（<span class=\"ilh-lang\">英语</span><span class=\"ilh-colon\">：</span><span class=\"ilh-link\"><a title=\"en:Flashsort\" class=\"extiw\" href=\"https://en.wikipedia.org/wiki/Flashsort\"><span lang=\"en\" dir=\"auto\" xml:lang=\"en\">Flashsort</span></a></span>）</span></span></li> \n         <li><a title=\"插值排序\" href=\"/wiki/%E6%8F%92%E5%80%BC%E6%8E%92%E5%BA%8F\">插值排序</a></li> \n        </ul> \n       </div> </td> \n     </tr> \n     <tr style=\"height: 2px; display: none;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr style=\"display: none;\"> \n      <th class=\"navbox-group\" scope=\"row\">并发排序</th> \n      <td class=\"navbox-list navbox-odd hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><span class=\"ilh-all\" data-foreign-title=\"Bitonic sorter\" data-lang-name=\"英语\" data-lang-code=\"en\" data-orig-title=\"双调排序器\"><span class=\"ilh-page\"><a class=\"new\" href=\"/w/index.php?title=%E5%8F%8C%E8%B0%83%E6%8E%92%E5%BA%8F%E5%99%A8&amp;action=edit&amp;redlink=1\" original-title=\"双调排序器（页面不存在）\">双调排序器</a></span><span class=\"noprint ilh-comment\">（<span class=\"ilh-lang\">英语</span><span class=\"ilh-colon\">：</span><span class=\"ilh-link\"><a title=\"en:Bitonic sorter\" class=\"extiw\" href=\"https://en.wikipedia.org/wiki/Bitonic_sorter\"><span lang=\"en\" dir=\"auto\" xml:lang=\"en\">Bitonic sorter</span></a></span>）</span></span></li> \n         <li><a title=\"Batcher归并网络\" href=\"/wiki/Batcher%E5%BD%92%E5%B9%B6%E7%BD%91%E7%BB%9C\">Batcher归并网络</a></li> \n         <li><span class=\"ilh-all\" data-foreign-title=\"Pairwise sorting network\" data-lang-name=\"英语\" data-lang-code=\"en\" data-orig-title=\"两两排序网络\"><span class=\"ilh-page\"><a class=\"new\" href=\"/w/index.php?title=%E4%B8%A4%E4%B8%A4%E6%8E%92%E5%BA%8F%E7%BD%91%E7%BB%9C&amp;action=edit&amp;redlink=1\" original-title=\"两两排序网络（页面不存在）\">两两排序网络</a></span><span class=\"noprint ilh-comment\">（<span class=\"ilh-lang\">英语</span><span class=\"ilh-colon\">：</span><span class=\"ilh-link\"><a title=\"en:Pairwise sorting network\" class=\"extiw\" href=\"https://en.wikipedia.org/wiki/Pairwise_sorting_network\"><span lang=\"en\" dir=\"auto\" xml:lang=\"en\">Pairwise sorting network</span></a></span>）</span></span></li> \n        </ul> \n       </div> </td> \n     </tr> \n     <tr style=\"height: 2px; display: none;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr style=\"display: none;\"> \n      <th class=\"navbox-group\" scope=\"row\">混合排序</th> \n      <td class=\"navbox-list navbox-even hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><span class=\"ilh-all\" data-foreign-title=\"Block sort\" data-lang-name=\"英语\" data-lang-code=\"en\" data-orig-title=\"塊排序\"><span class=\"ilh-page\"><a class=\"new\" href=\"/w/index.php?title=%E5%A1%8A%E6%8E%92%E5%BA%8F&amp;action=edit&amp;redlink=1\" original-title=\"块排序（页面不存在）\">块排序</a></span><span class=\"noprint ilh-comment\">（<span class=\"ilh-lang\">英语</span><span class=\"ilh-colon\">：</span><span class=\"ilh-link\"><a title=\"en:Block sort\" class=\"extiw\" href=\"https://en.wikipedia.org/wiki/Block_sort\"><span lang=\"en\" dir=\"auto\" xml:lang=\"en\">Block sort</span></a></span>）</span></span></li> \n         <li><span class=\"ilh-all\" data-foreign-title=\"Timsort\" data-lang-name=\"英语\" data-lang-code=\"en\" data-orig-title=\"Tim排序\"><span class=\"ilh-page\"><a class=\"new\" href=\"/w/index.php?title=Tim%E6%8E%92%E5%BA%8F&amp;action=edit&amp;redlink=1\" original-title=\"Tim排序（页面不存在）\">Tim排序</a></span><span class=\"noprint ilh-comment\">（<span class=\"ilh-lang\">英语</span><span class=\"ilh-colon\">：</span><span class=\"ilh-link\"><a title=\"en:Timsort\" class=\"extiw\" href=\"https://en.wikipedia.org/wiki/Timsort\"><span lang=\"en\" dir=\"auto\" xml:lang=\"en\">Timsort</span></a></span>）</span></span></li> \n         <li><a title=\"Introsort\" class=\"mw-redirect\" href=\"/wiki/Introsort\">内省排序</a></li> \n         <li><span class=\"ilh-all\" data-foreign-title=\"Spreadsort\" data-lang-name=\"英语\" data-lang-code=\"en\" data-orig-title=\"Spread排序\"><span class=\"ilh-page\"><a class=\"new\" href=\"/w/index.php?title=Spread%E6%8E%92%E5%BA%8F&amp;action=edit&amp;redlink=1\" original-title=\"Spread排序（页面不存在）\">Spread排序</a></span><span class=\"noprint ilh-comment\">（<span class=\"ilh-lang\">英语</span><span class=\"ilh-colon\">：</span><span class=\"ilh-link\"><a title=\"en:Spreadsort\" class=\"extiw\" href=\"https://en.wikipedia.org/wiki/Spreadsort\"><span lang=\"en\" dir=\"auto\" xml:lang=\"en\">Spreadsort</span></a></span>）</span></span></li> \n         <li><a title=\"J排序（页面不存在）\" class=\"new\" href=\"/w/index.php?title=J%E6%8E%92%E5%BA%8F&amp;action=edit&amp;redlink=1\">J排序</a></li> \n        </ul> \n       </div> </td> \n     </tr> \n     <tr style=\"height: 2px; display: none;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr style=\"display: none;\"> \n      <th class=\"navbox-group\" scope=\"row\">其他</th> \n      <td class=\"navbox-list navbox-odd hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><a title=\"拓扑排序\" class=\"mw-redirect\" href=\"/wiki/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F\">拓扑排序</a></li> \n         <li><span class=\"ilh-all\" data-foreign-title=\"Pancake sorting\" data-lang-name=\"英语\" data-lang-code=\"en\" data-orig-title=\"煎餅排序\"><span class=\"ilh-page\"><a class=\"new\" href=\"/w/index.php?title=%E7%85%8E%E9%A4%85%E6%8E%92%E5%BA%8F&amp;action=edit&amp;redlink=1\" original-title=\"煎饼排序（页面不存在）\">煎饼排序</a></span><span class=\"noprint ilh-comment\">（<span class=\"ilh-lang\">英语</span><span class=\"ilh-colon\">：</span><span class=\"ilh-link\"><a title=\"en:Pancake sorting\" class=\"extiw\" href=\"https://en.wikipedia.org/wiki/Pancake_sorting\"><span lang=\"en\" dir=\"auto\" xml:lang=\"en\">Pancake sorting</span></a></span>）</span></span></li> \n         <li><span class=\"ilh-all\" data-foreign-title=\"Spaghetti sort\" data-lang-name=\"英语\" data-lang-code=\"en\" data-orig-title=\"意粉排序\"><span class=\"ilh-page\"><a class=\"new\" href=\"/w/index.php?title=%E6%84%8F%E7%B2%89%E6%8E%92%E5%BA%8F&amp;action=edit&amp;redlink=1\" original-title=\"意粉排序（页面不存在）\">意粉排序</a></span><span class=\"noprint ilh-comment\">（<span class=\"ilh-lang\">英语</span><span class=\"ilh-colon\">：</span><span class=\"ilh-link\"><a title=\"en:Spaghetti sort\" class=\"extiw\" href=\"https://en.wikipedia.org/wiki/Spaghetti_sort\"><span lang=\"en\" dir=\"auto\" xml:lang=\"en\">Spaghetti sort</span></a></span>）</span></span></li> \n        </ul> \n       </div> </td> \n     </tr> \n    </tbody>\n   </table> </td> \n </tr> \n</tbody>","fragment_id":"二叉查找树的优化_5","scratchTime":"2017-10-28 15:38:53.0","type":"leaf","flag":"fragment"}]}]}