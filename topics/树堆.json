{"totalbranchlevel":2,"branchnum":5,"term_id":8,"name":"树堆","children":[{"totalbranchlevel":0,"facet_name":"摘要","totalbranchnum":0,"type":"branch","totalleafnum":1,"children":[{"url":"","content":"<b>树堆</b>（<span class=\"LangWithName\">英语：<span lang=\"en\" xml:lang=\"en\">Treap</span></span>），是有一个随机附加域满足<a title=\"堆\" class=\"mw-disambig\" href=\"/wiki/%E5%A0%86\">堆</a>的性质的<a title=\"二叉搜索树\" class=\"mw-redirect\" href=\"/wiki/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91\">二叉搜索树</a>，其结构相当于以随机数据插入的<a title=\"二叉搜索树\" class=\"mw-redirect\" href=\"/wiki/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91\">二叉搜索树</a>。其基本操作的期望<a title=\"时间复杂度\" href=\"/wiki/%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6\">时间复杂度</a>为<span class=\"mwe-math-element\"><span class=\"mwe-math-mathml-inline mwe-math-mathml-a11y\" style=\"display: none;\">\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\"> \n   <semantics> \n    <mrow class=\"MJX-TeXAtom-ORD\"> \n     <mstyle scriptlevel=\"0\" displaystyle=\"true\"> \n      <mi>\n       O\n      </mi> \n      <mo stretchy=\"false\">\n       (\n      </mo> \n      <mi>\n       log\n      </mi> \n      <mo>\n       ⁡\n       <!-- ⁡ -->\n      </mo> \n      <mrow class=\"MJX-TeXAtom-ORD\"> \n       <mi>\n        n\n       </mi> \n      </mrow> \n      <mo stretchy=\"false\">\n       )\n      </mo> \n     </mstyle> \n    </mrow> \n    <annotation encoding=\"application/x-tex\">\n     {\\displaystyle O(\\log {n})}\n    </annotation> \n   </semantics> \n  </math></span><img class=\"mwe-math-fallback-image-inline\" aria-hidden=\"true\" style=\"width: 8.4ex; height: 2.84ex; vertical-align: -0.83ex;\" alt=\"O(\\log{n})\" src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/653ab6d6fd99537d220f179d2591955ff4f37b99\" /></span>。相对于其他的<a title=\"平衡二叉搜索树\" class=\"mw-redirect\" href=\"/wiki/%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A8%B9\">平衡二叉搜索树</a>，Treap的特点是实现简单，且能基本实现随机平衡的结构。","fragment_id":"摘要_1","scratchTime":"2017-10-28 15:30:03.0","type":"leaf","flag":"fragment"}]},{"totalbranchlevel":1,"facet_name":"介绍","totalbranchnum":3,"type":"branch","totalleafnum":3,"children":[{"totalbranchlevel":0,"facet_name":"插入","totalbranchnum":0,"type":"branch","totalleafnum":2,"children":[{"url":"","content":"给节点随机分配一个优先级，先和<a title=\"二叉搜索树\" class=\"mw-redirect\" href=\"/wiki/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91\">二叉搜索树</a>的插入一样，先把要插入的点插入到一个叶子上，然后跟维护堆一样，如果当前节点的优先级比根大就旋转，如果当前节点是根的左儿子就右旋如果当前节点是根的右儿子就左旋。","fragment_id":"插入_1","scratchTime":"2017-10-28 15:30:03.0","type":"leaf","flag":"fragment"},{"url":"","content":"由于旋转是<span class=\"mwe-math-element\"><span class=\"mwe-math-mathml-inline mwe-math-mathml-a11y\" style=\"display: none;\">\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\"> \n   <semantics> \n    <mrow class=\"MJX-TeXAtom-ORD\"> \n     <mstyle scriptlevel=\"0\" displaystyle=\"true\"> \n      <mi>\n       O\n      </mi> \n      <mo stretchy=\"false\">\n       (\n      </mo> \n      <mn>\n       1\n      </mn> \n      <mo stretchy=\"false\">\n       )\n      </mo> \n     </mstyle> \n    </mrow> \n    <annotation encoding=\"application/x-tex\">\n     {\\displaystyle O(1)}\n    </annotation> \n   </semantics> \n  </math></span><img class=\"mwe-math-fallback-image-inline\" aria-hidden=\"true\" style=\"width: 4.78ex; height: 2.84ex; vertical-align: -0.83ex;\" alt=\"O(1)\" src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/e66384bc40452c5452f33563fe0e27e803b0cc21\" /></span>的，最多进行h次（h是树的高度），插入的复杂度是<span class=\"mwe-math-element\"><span class=\"mwe-math-mathml-inline mwe-math-mathml-a11y\" style=\"display: none;\">\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\"> \n   <semantics> \n    <mrow class=\"MJX-TeXAtom-ORD\"> \n     <mstyle scriptlevel=\"0\" displaystyle=\"true\"> \n      <mi>\n       O\n      </mi> \n      <mo stretchy=\"false\">\n       (\n      </mo> \n      <mi>\n       h\n      </mi> \n      <mo stretchy=\"false\">\n       )\n      </mo> \n     </mstyle> \n    </mrow> \n    <annotation encoding=\"application/x-tex\">\n     {\\displaystyle O(h)}\n    </annotation> \n   </semantics> \n  </math></span><img class=\"mwe-math-fallback-image-inline\" aria-hidden=\"true\" style=\"width: 4.96ex; height: 2.84ex; vertical-align: -0.83ex;\" alt=\"O(h)\" src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/08b2b7b64f0a9e9848ecd3a114cc7dcc8ca6179d\" /></span>的，在期望情况下<span class=\"mwe-math-element\"><span class=\"mwe-math-mathml-inline mwe-math-mathml-a11y\" style=\"display: none;\">\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\"> \n   <semantics> \n    <mrow class=\"MJX-TeXAtom-ORD\"> \n     <mstyle scriptlevel=\"0\" displaystyle=\"true\"> \n      <mi>\n       h\n      </mi> \n      <mo>\n       =\n      </mo> \n      <mi>\n       O\n      </mi> \n      <mo stretchy=\"false\">\n       (\n      </mo> \n      <mi>\n       log\n      </mi> \n      <mo>\n       ⁡\n       <!-- ⁡ -->\n      </mo> \n      <mrow class=\"MJX-TeXAtom-ORD\"> \n       <mi>\n        n\n       </mi> \n      </mrow> \n      <mo stretchy=\"false\">\n       )\n      </mo> \n     </mstyle> \n    </mrow> \n    <annotation encoding=\"application/x-tex\">\n     {\\displaystyle h=O(\\log {n})}\n    </annotation> \n   </semantics> \n  </math></span><img class=\"mwe-math-fallback-image-inline\" aria-hidden=\"true\" style=\"width: 12.86ex; height: 2.84ex; vertical-align: -0.83ex;\" alt=\"h=O(\\log {n})\" src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/eae61ac0f75a6eb01bb7e7b2d50375a78d6a94bf\" /></span>，所以它的期望复杂度是<span class=\"mwe-math-element\"><span class=\"mwe-math-mathml-inline mwe-math-mathml-a11y\" style=\"display: none;\">\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\"> \n   <semantics> \n    <mrow class=\"MJX-TeXAtom-ORD\"> \n     <mstyle scriptlevel=\"0\" displaystyle=\"true\"> \n      <mi>\n       O\n      </mi> \n      <mo stretchy=\"false\">\n       (\n      </mo> \n      <mi>\n       log\n      </mi> \n      <mo>\n       ⁡\n       <!-- ⁡ -->\n      </mo> \n      <mrow class=\"MJX-TeXAtom-ORD\"> \n       <mi>\n        n\n       </mi> \n      </mrow> \n      <mo stretchy=\"false\">\n       )\n      </mo> \n     </mstyle> \n    </mrow> \n    <annotation encoding=\"application/x-tex\">\n     {\\displaystyle O(\\log {n})}\n    </annotation> \n   </semantics> \n  </math></span><img class=\"mwe-math-fallback-image-inline\" aria-hidden=\"true\" style=\"width: 8.4ex; height: 2.84ex; vertical-align: -0.83ex;\" alt=\"O(\\log{n})\" src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/653ab6d6fd99537d220f179d2591955ff4f37b99\" /></span>。","fragment_id":"插入_2","scratchTime":"2017-10-28 15:30:03.0","type":"leaf","flag":"fragment"}]},{"totalbranchlevel":0,"facet_name":"删除","totalbranchnum":0,"type":"branch","totalleafnum":1,"children":[{"url":"","content":"删除最多进行<span class=\"mwe-math-element\"><span class=\"mwe-math-mathml-inline mwe-math-mathml-a11y\" style=\"display: none;\">\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\"> \n   <semantics> \n    <mrow class=\"MJX-TeXAtom-ORD\"> \n     <mstyle scriptlevel=\"0\" displaystyle=\"true\"> \n      <mi>\n       O\n      </mi> \n      <mo stretchy=\"false\">\n       (\n      </mo> \n      <mi>\n       h\n      </mi> \n      <mo stretchy=\"false\">\n       )\n      </mo> \n     </mstyle> \n    </mrow> \n    <annotation encoding=\"application/x-tex\">\n     {\\displaystyle O(h)}\n    </annotation> \n   </semantics> \n  </math></span><img class=\"mwe-math-fallback-image-inline\" aria-hidden=\"true\" style=\"width: 4.96ex; height: 2.84ex; vertical-align: -0.83ex;\" alt=\"O(h)\" src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/08b2b7b64f0a9e9848ecd3a114cc7dcc8ca6179d\" /></span>次旋转，期望复杂度是<span class=\"mwe-math-element\"><span class=\"mwe-math-mathml-inline mwe-math-mathml-a11y\" style=\"display: none;\">\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\"> \n   <semantics> \n    <mrow class=\"MJX-TeXAtom-ORD\"> \n     <mstyle scriptlevel=\"0\" displaystyle=\"true\"> \n      <mi>\n       O\n      </mi> \n      <mo stretchy=\"false\">\n       (\n      </mo> \n      <mi>\n       log\n      </mi> \n      <mo>\n       ⁡\n       <!-- ⁡ -->\n      </mo> \n      <mrow class=\"MJX-TeXAtom-ORD\"> \n       <mi>\n        n\n       </mi> \n      </mrow> \n      <mo stretchy=\"false\">\n       )\n      </mo> \n     </mstyle> \n    </mrow> \n    <annotation encoding=\"application/x-tex\">\n     {\\displaystyle O(\\log {n})}\n    </annotation> \n   </semantics> \n  </math></span><img class=\"mwe-math-fallback-image-inline\" aria-hidden=\"true\" style=\"width: 8.4ex; height: 2.84ex; vertical-align: -0.83ex;\" alt=\"O(\\log{n})\" src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/653ab6d6fd99537d220f179d2591955ff4f37b99\" /></span>。","fragment_id":"删除_1","scratchTime":"2017-10-28 15:30:03.0","type":"leaf","flag":"fragment"}]},{"totalbranchlevel":0,"facet_name":"查找","totalbranchnum":0,"type":"branch","totalleafnum":1,"children":[{"url":"","content":"和一般的<a title=\"二叉搜索树\" class=\"mw-redirect\" href=\"/wiki/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91\">二叉搜索树</a>一样，但是由于Treap的随机化结构，Treap中查找的期望复杂度是<span class=\"mwe-math-element\"><span class=\"mwe-math-mathml-inline mwe-math-mathml-a11y\" style=\"display: none;\">\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\"> \n   <semantics> \n    <mrow class=\"MJX-TeXAtom-ORD\"> \n     <mstyle scriptlevel=\"0\" displaystyle=\"true\"> \n      <mi>\n       O\n      </mi> \n      <mo stretchy=\"false\">\n       (\n      </mo> \n      <mi>\n       log\n      </mi> \n      <mo>\n       ⁡\n       <!-- ⁡ -->\n      </mo> \n      <mrow class=\"MJX-TeXAtom-ORD\"> \n       <mi>\n        n\n       </mi> \n      </mrow> \n      <mo stretchy=\"false\">\n       )\n      </mo> \n     </mstyle> \n    </mrow> \n    <annotation encoding=\"application/x-tex\">\n     {\\displaystyle O(\\log {n})}\n    </annotation> \n   </semantics> \n  </math></span><img class=\"mwe-math-fallback-image-inline\" aria-hidden=\"true\" style=\"width: 8.4ex; height: 2.84ex; vertical-align: -0.83ex;\" alt=\"O(\\log{n})\" src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/653ab6d6fd99537d220f179d2591955ff4f37b99\" /></span>。","fragment_id":"查找_1","scratchTime":"2017-10-28 15:30:03.0","type":"leaf","flag":"fragment"}]}]},{"totalbranchlevel":0,"facet_name":"算法分析","totalbranchnum":0,"type":"branch","totalleafnum":2,"children":[{"url":"","content":"<a title=\"二叉搜索树\" class=\"mw-redirect\" href=\"/wiki/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91\">二叉搜索树</a>有一个特性，就是每个子树的形态在优先级唯一确定的情况下都是唯一的，不受其他因素影响，也就是说，左子树的形态与树中大于根节点的值无关，右子树亦然。这是因为Treap满足堆的性质，Treap的根节点是优先级最大的那个节点，考虑它的左子树，树根也是子树里面最大的一点，右子树亦然。所以Treap相当于先把所有节点按照优先级排序，然后插入，实质上就相当于以随机顺序建立的<a title=\"二叉搜索树\" class=\"mw-redirect\" href=\"/wiki/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91\">二叉搜索树</a>，只不过它并不需要一次读入所有数据，可以一个一个地插入。而当这个随机顺序确定的时候，这个树是唯一的。因此在给定优先级的情况下，只要是用符合要求的操作，通过任何方式得出的Treap都是一样的，所以不改变优先级的情况下，特殊的操作不会造成Treap结构的退化。而改变优先级可能会使Treap变得不够随机以致退化。","fragment_id":"算法分析_1","scratchTime":"2017-10-28 15:30:03.0","type":"leaf","flag":"fragment"},{"url":"","content":"Treap的其它操作的期望复杂度同样是<span class=\"mwe-math-element\"><span class=\"mwe-math-mathml-inline mwe-math-mathml-a11y\" style=\"display: none;\">\n  <math xmlns=\"http://www.w3.org/1998/Math/MathML\"> \n   <semantics> \n    <mrow class=\"MJX-TeXAtom-ORD\"> \n     <mstyle scriptlevel=\"0\" displaystyle=\"true\"> \n      <mi>\n       O\n      </mi> \n      <mo stretchy=\"false\">\n       (\n      </mo> \n      <mi>\n       log\n      </mi> \n      <mo>\n       ⁡\n       <!-- ⁡ -->\n      </mo> \n      <mrow class=\"MJX-TeXAtom-ORD\"> \n       <mi>\n        n\n       </mi> \n      </mrow> \n      <mo stretchy=\"false\">\n       )\n      </mo> \n     </mstyle> \n    </mrow> \n    <annotation encoding=\"application/x-tex\">\n     {\\displaystyle O(\\log {n})}\n    </annotation> \n   </semantics> \n  </math></span><img class=\"mwe-math-fallback-image-inline\" aria-hidden=\"true\" style=\"width: 8.4ex; height: 2.84ex; vertical-align: -0.83ex;\" alt=\"O(\\log{n})\" src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/653ab6d6fd99537d220f179d2591955ff4f37b99\" /></span>。","fragment_id":"算法分析_2","scratchTime":"2017-10-28 15:30:03.0","type":"leaf","flag":"fragment"}]},{"totalbranchlevel":1,"facet_name":"参考程序","totalbranchnum":2,"type":"branch","totalleafnum":2,"children":[{"totalbranchlevel":0,"facet_name":"Pascal","totalbranchnum":0,"type":"branch","totalleafnum":1,"children":[{"url":"","content":"<pre> <span class=\"cm\">(*</span>\n<span class=\"cm\">    Project: Amber Standard Sources Library [ASSL]</span>\n<span class=\"cm\">    Author: Amber</span>\n<span class=\"cm\">    Title: Treap</span>\n<span class=\"cm\">    Category: Data Structure</span>\n<span class=\"cm\">    Version: v1.0</span>\n<span class=\"cm\">    Remark: XXXXXXXX</span>\n<span class=\"cm\">    Tested Problems: N/A</span>\n<span class=\"cm\">    Date: 2006-11-16</span>\n<span class=\"cm\"> *)</span>\n <span class=\"k\">program</span> <span class=\"n\">ASSL_Treap</span><span class=\"p\">(</span><span class=\"n\">Input</span><span class=\"o\">,</span> <span class=\"n\">Output</span><span class=\"p\">)</span><span class=\"o\">;</span>\n <span class=\"k\">const</span>\n    <span class=\"n\">Infinity</span> <span class=\"o\">=</span> <span class=\"mi\">65535</span><span class=\"o\">;</span>\n <span class=\"k\">type</span>\n    <span class=\"n\">TIndex</span> <span class=\"o\">=</span> <span class=\"kt\">Longint</span><span class=\"o\">;</span>\n    <span class=\"n\">TKey</span> <span class=\"o\">=</span> <span class=\"kt\">Longint</span><span class=\"o\">;</span>\n    <span class=\"n\">TPriority</span> <span class=\"o\">=</span> <span class=\"kt\">Word</span><span class=\"o\">;</span>\n    <span class=\"n\">PTreapNode</span> <span class=\"o\">=</span> <span class=\"o\">^</span><span class=\"n\">TTreapNode</span><span class=\"o\">;</span>\n    <span class=\"n\">TTreapNode</span> <span class=\"o\">=</span> <span class=\"k\">record</span>\n        <span class=\"n\">Left</span><span class=\"o\">,</span> <span class=\"n\">Right</span><span class=\"o\">:</span> <span class=\"n\">PTreapNode</span><span class=\"o\">;</span>\n        <span class=\"n\">Priority</span><span class=\"o\">:</span> <span class=\"n\">TPriority</span><span class=\"o\">;</span>\n        <span class=\"n\">Key</span><span class=\"o\">:</span> <span class=\"n\">TKey</span><span class=\"o\">;</span>\n    <span class=\"k\">end</span><span class=\"o\">;</span>\n <span class=\"k\">var</span>\n    <span class=\"n\">NullNode</span><span class=\"o\">:</span> <span class=\"n\">PTreapNode</span><span class=\"o\">;</span>\n \n <span class=\"k\">procedure</span> <span class=\"nf\">Initalize</span><span class=\"o\">;</span>\n <span class=\"k\">begin</span>\n    <span class=\"k\">if</span> <span class=\"n\">NullNode</span> <span class=\"o\">=</span> <span class=\"k\">nil</span> <span class=\"k\">then</span>\n    <span class=\"k\">begin</span>\n        <span class=\"k\">New</span><span class=\"p\">(</span><span class=\"n\">NullNode</span><span class=\"p\">)</span><span class=\"o\">;</span>\n        <span class=\"n\">NullNode</span><span class=\"o\">^.</span><span class=\"n\">Left</span> <span class=\"o\">:=</span> <span class=\"n\">NullNode</span><span class=\"o\">;</span>\n        <span class=\"n\">NullNode</span><span class=\"o\">^.</span><span class=\"n\">Right</span> <span class=\"o\">:=</span> <span class=\"n\">NullNode</span><span class=\"o\">;</span>\n        <span class=\"n\">NullNode</span><span class=\"o\">^.</span><span class=\"n\">Priority</span> <span class=\"o\">:=</span> <span class=\"n\">Infinity</span><span class=\"o\">;</span>\n    <span class=\"k\">end</span><span class=\"o\">;</span>\n <span class=\"k\">end</span><span class=\"o\">;</span>\n \n <span class=\"k\">function</span> <span class=\"nf\">FindMax</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"n\">PTreapNode</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"n\">PTreapNode</span><span class=\"o\">;</span>\n <span class=\"k\">begin</span>\n    <span class=\"k\">if</span> <span class=\"n\">T</span> <span class=\"o\">&lt;&gt;</span> <span class=\"n\">NullNode</span> <span class=\"k\">then</span>\n        <span class=\"k\">while</span> <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Right</span> <span class=\"o\">&lt;&gt;</span> <span class=\"n\">NullNode</span> <span class=\"k\">do</span>\n            <span class=\"n\">T</span> <span class=\"o\">:=</span> <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Right</span><span class=\"o\">;</span>\n    <span class=\"bp\">Result</span> <span class=\"o\">:=</span> <span class=\"n\">T</span><span class=\"o\">;</span>\n <span class=\"k\">end</span><span class=\"o\">;</span>\n \n <span class=\"k\">function</span> <span class=\"nf\">FindMin</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"n\">PTreapNode</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"n\">PTreapNode</span><span class=\"o\">;</span>\n <span class=\"k\">begin</span>\n    <span class=\"k\">if</span> <span class=\"n\">T</span> <span class=\"o\">&lt;&gt;</span> <span class=\"n\">NullNode</span> <span class=\"k\">then</span>\n        <span class=\"k\">while</span> <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Left</span> <span class=\"o\">&lt;&gt;</span> <span class=\"n\">NullNode</span> <span class=\"k\">do</span>\n            <span class=\"n\">T</span> <span class=\"o\">:=</span> <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Left</span><span class=\"o\">;</span>\n    <span class=\"bp\">Result</span> <span class=\"o\">:=</span> <span class=\"n\">T</span><span class=\"o\">;</span>\n <span class=\"k\">end</span><span class=\"o\">;</span>\n \n <span class=\"k\">function</span> <span class=\"nf\">Find</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"n\">PTreapNode</span><span class=\"o\">;</span> <span class=\"n\">Key</span><span class=\"o\">:</span> <span class=\"n\">TKey</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"n\">PTreapNode</span><span class=\"o\">;</span>\n <span class=\"k\">begin</span>\n    <span class=\"k\">while</span> <span class=\"n\">T</span> <span class=\"o\">&lt;&gt;</span> <span class=\"n\">NullNode</span> <span class=\"k\">do</span>\n        <span class=\"k\">if</span> <span class=\"n\">Key</span> <span class=\"o\">&lt;</span> <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Key</span> <span class=\"k\">then</span>\n            <span class=\"n\">T</span> <span class=\"o\">:=</span> <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Left</span>\n        <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"n\">Key</span> <span class=\"o\">&gt;</span> <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Key</span> <span class=\"k\">then</span>\n            <span class=\"n\">T</span> <span class=\"o\">:=</span> <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Right</span>\n        <span class=\"k\">else</span>\n            <span class=\"k\">Break</span><span class=\"o\">;</span>\n    <span class=\"bp\">Result</span> <span class=\"o\">:=</span> <span class=\"n\">T</span><span class=\"o\">;</span>\n <span class=\"k\">end</span><span class=\"o\">;</span>\n \n <span class=\"k\">function</span> <span class=\"nf\">LeftRotate</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"n\">PTreapNode</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"n\">PTreapNode</span><span class=\"o\">;</span>\n <span class=\"k\">begin</span>\n    <span class=\"bp\">Result</span> <span class=\"o\">:=</span> <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Left</span><span class=\"o\">;</span>\n    <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Left</span> <span class=\"o\">:=</span> <span class=\"bp\">Result</span><span class=\"o\">^.</span><span class=\"n\">Right</span><span class=\"o\">;</span>\n    <span class=\"bp\">Result</span><span class=\"o\">^.</span><span class=\"n\">Right</span> <span class=\"o\">:=</span> <span class=\"n\">T</span><span class=\"o\">;</span>\n <span class=\"k\">end</span><span class=\"o\">;</span>\n \n <span class=\"k\">function</span> <span class=\"nf\">RightRotate</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"n\">PTreapNode</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"n\">PTreapNode</span><span class=\"o\">;</span>\n <span class=\"k\">begin</span>\n    <span class=\"bp\">Result</span> <span class=\"o\">:=</span> <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Right</span><span class=\"o\">;</span>\n    <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Right</span> <span class=\"o\">:=</span> <span class=\"bp\">Result</span><span class=\"o\">^.</span><span class=\"n\">Left</span><span class=\"o\">;</span>\n    <span class=\"bp\">Result</span><span class=\"o\">^.</span><span class=\"n\">Left</span> <span class=\"o\">:=</span> <span class=\"n\">T</span><span class=\"o\">;</span>\n <span class=\"k\">end</span><span class=\"o\">;</span>\n \n <span class=\"k\">function</span> <span class=\"nf\">InsertNode</span><span class=\"p\">(</span><span class=\"n\">Key</span><span class=\"o\">:</span> <span class=\"n\">TKey</span><span class=\"o\">;</span> <span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"n\">PTreapNode</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"n\">PTreapNode</span><span class=\"o\">;</span>\n <span class=\"k\">begin</span>\n    <span class=\"k\">if</span> <span class=\"n\">T</span> <span class=\"o\">=</span> <span class=\"n\">NullNode</span> <span class=\"k\">then</span>\n    <span class=\"k\">begin</span>\n        <span class=\"k\">New</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">)</span><span class=\"o\">;</span>\n        <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Left</span> <span class=\"o\">:=</span> <span class=\"n\">NullNode</span><span class=\"o\">;</span>\n        <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Right</span> <span class=\"o\">:=</span> <span class=\"n\">NullNode</span><span class=\"o\">;</span>\n        <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Key</span> <span class=\"o\">:=</span> <span class=\"n\">Key</span><span class=\"o\">;</span>\n        <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Priority</span> <span class=\"o\">:=</span> <span class=\"nb\">Random</span><span class=\"p\">(</span><span class=\"mi\">65535</span><span class=\"p\">)</span><span class=\"o\">;</span>\n    <span class=\"k\">end</span>\n    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"n\">Key</span> <span class=\"o\">&lt;</span> <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Key</span> <span class=\"k\">then</span>\n    <span class=\"k\">begin</span>\n        <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Left</span> <span class=\"o\">:=</span> <span class=\"n\">InsertNode</span><span class=\"p\">(</span><span class=\"n\">Key</span><span class=\"o\">,</span> <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Left</span><span class=\"p\">)</span><span class=\"o\">;</span>\n        <span class=\"k\">if</span> <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Left</span><span class=\"o\">^.</span><span class=\"n\">Priority</span> <span class=\"o\">&lt;</span> <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Priority</span> <span class=\"k\">then</span>\n            <span class=\"n\">T</span> <span class=\"o\">:=</span> <span class=\"n\">LeftRotate</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">)</span><span class=\"o\">;</span>\n    <span class=\"k\">end</span>\n    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"n\">Key</span> <span class=\"o\">&gt;</span> <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Key</span> <span class=\"k\">then</span>\n    <span class=\"k\">begin</span>\n        <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Right</span> <span class=\"o\">:=</span> <span class=\"n\">InsertNode</span><span class=\"p\">(</span><span class=\"n\">Key</span><span class=\"o\">,</span> <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Right</span><span class=\"p\">)</span><span class=\"o\">;</span>\n        <span class=\"k\">if</span> <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Right</span><span class=\"o\">^.</span><span class=\"n\">Priority</span> <span class=\"o\">&lt;</span> <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Priority</span> <span class=\"k\">then</span>\n            <span class=\"n\">T</span> <span class=\"o\">:=</span> <span class=\"n\">RightRotate</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">)</span><span class=\"o\">;</span>\n    <span class=\"k\">end</span><span class=\"o\">;</span>\n    <span class=\"bp\">Result</span> <span class=\"o\">:=</span> <span class=\"n\">T</span><span class=\"o\">;</span>\n <span class=\"k\">end</span><span class=\"o\">;</span>\n \n <span class=\"k\">function</span> <span class=\"nf\">DeleteNode</span><span class=\"p\">(</span><span class=\"n\">Key</span><span class=\"o\">:</span> <span class=\"n\">TKey</span><span class=\"o\">;</span> <span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"n\">PTreapNode</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"n\">PTreapNode</span><span class=\"o\">;</span>\n <span class=\"k\">begin</span>\n    <span class=\"k\">if</span> <span class=\"n\">T</span> <span class=\"o\">&lt;&gt;</span> <span class=\"n\">NullNode</span> <span class=\"k\">then</span>\n        <span class=\"k\">if</span> <span class=\"n\">Key</span> <span class=\"o\">&lt;</span> <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Key</span> <span class=\"k\">then</span>\n            <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Left</span> <span class=\"o\">:=</span> <span class=\"n\">DeleteNode</span><span class=\"p\">(</span><span class=\"n\">Key</span><span class=\"o\">,</span> <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Left</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"n\">Key</span> <span class=\"o\">&gt;</span> <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Key</span> <span class=\"k\">then</span>\n            <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Right</span> <span class=\"o\">:=</span> <span class=\"n\">DeleteNode</span><span class=\"p\">(</span><span class=\"n\">Key</span><span class=\"o\">,</span> <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Right</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span>\n        <span class=\"k\">begin</span>\n            <span class=\"k\">if</span> <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Left</span><span class=\"o\">^.</span><span class=\"n\">Priority</span> <span class=\"o\">&lt;</span> <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Right</span><span class=\"o\">^.</span><span class=\"n\">Priority</span> <span class=\"k\">then</span>\n                <span class=\"n\">T</span> <span class=\"o\">:=</span> <span class=\"n\">LeftRotate</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span>\n                <span class=\"n\">T</span> <span class=\"o\">:=</span> <span class=\"n\">RightRotate</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">)</span><span class=\"o\">;</span>\n            <span class=\"k\">if</span> <span class=\"n\">T</span> <span class=\"o\">&lt;&gt;</span> <span class=\"n\">NullNode</span> <span class=\"k\">then</span>\n                <span class=\"n\">T</span> <span class=\"o\">:=</span> <span class=\"n\">DeleteNode</span><span class=\"p\">(</span><span class=\"n\">Key</span><span class=\"o\">,</span> <span class=\"n\">T</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span> <span class=\"c1\">//RightRotate</span>\n            <span class=\"k\">begin</span>\n                <span class=\"k\">Dispose</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Left</span><span class=\"p\">)</span><span class=\"o\">;</span>\n                <span class=\"n\">T</span><span class=\"o\">^.</span><span class=\"n\">Left</span> <span class=\"o\">:=</span> <span class=\"n\">NullNode</span><span class=\"o\">;</span>\n            <span class=\"k\">end</span><span class=\"o\">;</span>\n        <span class=\"k\">end</span><span class=\"o\">;</span>\n     <span class=\"bp\">Result</span> <span class=\"o\">:=</span> <span class=\"n\">T</span><span class=\"o\">;</span>\n <span class=\"k\">end</span><span class=\"o\">;</span>\n \n <span class=\"k\">procedure</span> <span class=\"nf\">Main</span><span class=\"o\">;</span>\n <span class=\"k\">begin</span>\n     <span class=\"n\">Initalize</span><span class=\"o\">;</span>\n <span class=\"k\">end</span><span class=\"o\">;</span>\n <span class=\"k\">begin</span>\n     <span class=\"n\">Main</span><span class=\"o\">;</span>\n <span class=\"k\">end</span><span class=\"o\">.</span>\n</pre>","fragment_id":"Pascal_1","scratchTime":"2017-10-28 15:30:03.0","type":"leaf","flag":"fragment"}]},{"totalbranchlevel":0,"facet_name":"C++","totalbranchnum":0,"type":"branch","totalleafnum":1,"children":[{"url":"","content":"<pre><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;iostream&gt;</span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;ctime&gt;</span>\n\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;cstdlib&gt;</span>\n<span class=\"cp\">#define MAX 100</span>\n\n<span class=\"k\">using</span> <span class=\"k\">namespace</span> <span class=\"n\">std</span><span class=\"p\">;</span>\n\n<span class=\"k\">typedef</span> <span class=\"k\">struct</span>\n<span class=\"p\">{</span>\n\t<span class=\"kt\">int</span> <span class=\"n\">l</span><span class=\"p\">,</span><span class=\"n\">r</span><span class=\"p\">,</span><span class=\"n\">key</span><span class=\"p\">,</span><span class=\"n\">fix</span><span class=\"p\">;</span>\n<span class=\"p\">}</span> <span class=\"n\">node</span><span class=\"p\">;</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">treap</span>\n<span class=\"p\">{</span>\n<span class=\"k\">public</span><span class=\"o\">:</span>\n\t<span class=\"n\">node</span> <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">MAX</span><span class=\"p\">];</span>\n\t<span class=\"kt\">int</span> <span class=\"n\">size</span><span class=\"p\">,</span><span class=\"n\">root</span><span class=\"p\">;</span>\n\t<span class=\"n\">treap</span><span class=\"p\">()</span>\n\t<span class=\"p\">{</span>\n\t\t<span class=\"n\">srand</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">));</span>\n\t\t<span class=\"n\">size</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n\t\t<span class=\"n\">root</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n\t<span class=\"p\">}</span>\n\n\t<span class=\"kt\">void</span> <span class=\"n\">rot_l</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"o\">&amp;</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\t<span class=\"p\">{</span>\n\t\t<span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">].</span><span class=\"n\">r</span><span class=\"p\">;</span>\n\t\t<span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">].</span><span class=\"n\">r</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">y</span><span class=\"p\">].</span><span class=\"n\">l</span><span class=\"p\">;</span>\n\t\t<span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">y</span><span class=\"p\">].</span><span class=\"n\">l</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">;</span>\n\t\t<span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">;</span>\n\t<span class=\"p\">}</span>\n\n\t<span class=\"kt\">void</span> <span class=\"n\">rot_r</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"o\">&amp;</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\t<span class=\"p\">{</span>\n\t\t<span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">].</span><span class=\"n\">l</span><span class=\"p\">;</span>\n\t\t<span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">].</span><span class=\"n\">l</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">y</span><span class=\"p\">].</span><span class=\"n\">r</span><span class=\"p\">;</span>\n\t\t<span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">y</span><span class=\"p\">].</span><span class=\"n\">r</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">;</span>\n\t\t<span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">;</span>\n\t<span class=\"p\">}</span>\n\n\t<span class=\"kt\">void</span> <span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"o\">&amp;</span><span class=\"n\">k</span><span class=\"p\">,</span><span class=\"kt\">int</span> <span class=\"n\">tkey</span><span class=\"p\">)</span>\n\t<span class=\"p\">{</span>\n\t\t<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">k</span><span class=\"o\">==-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\t\t<span class=\"p\">{</span>\n\t\t\t<span class=\"n\">k</span><span class=\"o\">=++</span><span class=\"n\">size</span><span class=\"p\">;</span>\n\t\t\t<span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">l</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">r</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n\t\t\t<span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">tkey</span><span class=\"p\">;</span>\n\t\t\t<span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">fix</span><span class=\"o\">=</span><span class=\"n\">rand</span><span class=\"p\">();</span>\n\t\t<span class=\"p\">}</span>\n\t\t<span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">tkey</span><span class=\"o\">&lt;</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">key</span><span class=\"p\">)</span>\n\t\t<span class=\"p\">{</span>\n\t\t\t<span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"n\">tkey</span><span class=\"p\">);</span>\n\t\t\t<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">[</span> <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">l</span> <span class=\"p\">].</span><span class=\"n\">fix</span><span class=\"o\">&gt;</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">fix</span><span class=\"p\">)</span>\n\t\t\t\t<span class=\"n\">rot_r</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">);</span>\n\t\t<span class=\"p\">}</span>\n\t\t<span class=\"k\">else</span>\n\t\t<span class=\"p\">{</span>\n\t\t\t<span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">r</span><span class=\"p\">,</span><span class=\"n\">tkey</span><span class=\"p\">);</span>\n\t\t\t<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">[</span> <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">r</span> <span class=\"p\">].</span><span class=\"n\">fix</span><span class=\"o\">&gt;</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">fix</span><span class=\"p\">)</span>\n\t\t\t\t<span class=\"n\">rot_l</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">);</span>\n\t\t<span class=\"p\">}</span>\n\n\t<span class=\"p\">}</span>\n\n\t<span class=\"kt\">void</span> <span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"o\">&amp;</span><span class=\"n\">k</span><span class=\"p\">,</span><span class=\"kt\">int</span> <span class=\"n\">tkey</span><span class=\"p\">)</span>\n\t<span class=\"p\">{</span>\n\t\t<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">k</span><span class=\"o\">==-</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"k\">return</span><span class=\"p\">;</span>\n\t\t<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">tkey</span><span class=\"o\">&lt;</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">key</span><span class=\"p\">)</span>\n\t\t\t<span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"n\">tkey</span><span class=\"p\">);</span>\n\t\t<span class=\"k\">else</span> <span class=\"nf\">if</span> <span class=\"p\">(</span><span class=\"n\">tkey</span><span class=\"o\">&gt;</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">key</span><span class=\"p\">)</span>\n\t\t\t<span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">r</span><span class=\"p\">,</span><span class=\"n\">tkey</span><span class=\"p\">);</span>\n\t\t<span class=\"k\">else</span>\n\t\t<span class=\"p\">{</span>\n\t\t\t<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">l</span><span class=\"o\">==-</span><span class=\"mi\">1</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">r</span><span class=\"o\">==-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\t\t\t\t<span class=\"n\">k</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n\t\t\t<span class=\"k\">else</span> <span class=\"nf\">if</span> <span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">l</span><span class=\"o\">==-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\t\t\t\t<span class=\"n\">k</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">r</span><span class=\"p\">;</span>\n\t\t\t<span class=\"k\">else</span> <span class=\"nf\">if</span> <span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">r</span><span class=\"o\">==-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\t\t\t\t<span class=\"n\">k</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">l</span><span class=\"p\">;</span>\n\t\t\t<span class=\"k\">else</span> <span class=\"nf\">if</span> <span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">[</span> <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">l</span> <span class=\"p\">].</span><span class=\"n\">fix</span> <span class=\"o\">&lt;</span> <span class=\"n\">p</span><span class=\"p\">[</span> <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">r</span> <span class=\"p\">].</span><span class=\"n\">fix</span><span class=\"p\">)</span>\n\t\t\t<span class=\"p\">{</span>\n\t\t\t\t<span class=\"n\">rot_l</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">);</span>\n\t\t\t\t<span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"n\">tkey</span><span class=\"p\">);</span>\n\t\t\t<span class=\"p\">}</span>\n\t\t\t<span class=\"k\">else</span>\n\t\t\t<span class=\"p\">{</span>\n\t\t\t\t<span class=\"n\">rot_r</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">);</span>\n\t\t\t\t<span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">r</span><span class=\"p\">,</span><span class=\"n\">tkey</span><span class=\"p\">);</span>\n\t\t\t<span class=\"p\">}</span>\n\t\t<span class=\"p\">}</span>\n\t<span class=\"p\">}</span>\n\n\t<span class=\"kt\">void</span> <span class=\"n\">print</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">k</span><span class=\"p\">)</span>\n\t<span class=\"p\">{</span>\n\t\t<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">k</span> <span class=\"o\">==</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"p\">;</span>\n\t\t<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">l</span><span class=\"o\">!=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\t\t\t<span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">l</span><span class=\"p\">);</span>\n\t\t<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">key</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot; : &quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">fix</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">endl</span><span class=\"p\">;</span>\n\t\t<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">r</span><span class=\"o\">!=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\t\t\t<span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">].</span><span class=\"n\">r</span><span class=\"p\">);</span>\n\t<span class=\"p\">}</span>\n<span class=\"p\">};</span>\n\n<span class=\"n\">treap</span> <span class=\"n\">T</span><span class=\"p\">;</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n\n\t<span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"p\">;</span>\n\t<span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">1</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">--</span><span class=\"p\">)</span>\n\t\t<span class=\"n\">T</span><span class=\"p\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">.</span><span class=\"n\">root</span><span class=\"p\">,</span><span class=\"n\">i</span><span class=\"p\">);</span>\n\t<span class=\"n\">T</span><span class=\"p\">.</span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">.</span><span class=\"n\">root</span><span class=\"p\">);</span>\n\t<span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">1</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">--</span><span class=\"p\">)</span>\n\t<span class=\"p\">{</span>\n\t\t<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">endl</span><span class=\"p\">;</span>\n\t\t<span class=\"n\">T</span><span class=\"p\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">.</span><span class=\"n\">root</span><span class=\"p\">,</span><span class=\"n\">i</span><span class=\"p\">);</span>\n\t\t<span class=\"n\">T</span><span class=\"p\">.</span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">.</span><span class=\"n\">root</span><span class=\"p\">);</span>\n\t<span class=\"p\">}</span>\n\t<span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre>","fragment_id":"C++_1","scratchTime":"2017-10-28 15:30:03.0","type":"leaf","flag":"fragment"}]}]},{"totalbranchlevel":0,"facet_name":"与其他结构的比较","totalbranchnum":0,"type":"branch","totalleafnum":3,"children":[{"url":"","content":"<li><a title=\"AVL树\" href=\"/wiki/AVL%E6%A0%91\">AVL树</a></li> \n<li><a title=\"伸展树\" href=\"/wiki/%E4%BC%B8%E5%B1%95%E6%A0%91\">伸展树</a>（Splay Tree）</li> \n<li><a title=\"线段树\" class=\"mw-redirect\" href=\"/wiki/%E7%BA%BF%E6%AE%B5%E6%A0%91\">线段树</a></li> \n<li><a title=\"红黑树\" href=\"/wiki/%E7%BA%A2%E9%BB%91%E6%A0%91\">红黑树</a></li> \n<li><a title=\"节点大小平衡树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E7%AF%80%E9%BB%9E%E5%A4%A7%E5%B0%8F%E5%B9%B3%E8%A1%A1%E6%A8%B9&amp;action=edit&amp;redlink=1\">Size Balanced Tree</a></li>","fragment_id":"与其他结构的比较_1","scratchTime":"2017-10-28 15:30:03.0","type":"leaf","flag":"fragment"},{"url":"","content":"<span id=\"外部链接\"></span><span class=\"mw-headline\" id=\".E5.A4.96.E9.83.A8.E9.93.BE.E6.8E.A5\">外部链接</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a title=\"编辑小节：外部链接\" href=\"/w/index.php?title=%E6%A0%91%E5%A0%86&amp;action=edit&amp;section=10\">编辑</a><span class=\"mw-editsection-bracket\">]</span></span>","fragment_id":"与其他结构的比较_2","scratchTime":"2017-10-28 15:30:03.0","type":"leaf","flag":"fragment"},{"url":"","content":"<tbody>\n <tr> \n  <td style=\"padding: 2px;\"> \n   <table class=\"nowraplinks collapsible autocollapse navbox-inner\" id=\"collapsibleTable0\" style=\"background: none; color: inherit; border-spacing: 0;\" cellspacing=\"0\"> \n    <tbody>\n     <tr> \n      <th class=\"navbox-title\" colspan=\"2\" scope=\"col\"><span class=\"collapseButton\">[<a id=\"collapseButton0\" href=\"#\">隐藏</a>]</span> \n       <div class=\"plainlinks hlist navbar mini\"> \n        <ul> \n         <li class=\"nv-view\"><a title=\"Template:计算机科学中的树\" href=\"/wiki/Template:%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%AD%E7%9A%84%E6%A0%91\"><abbr title=\"查看该模板\" style=\"background: none; border: currentColor; border-image: none;\">查</abbr></a></li> \n         <li class=\"nv-talk\"><a title=\"Template talk:计算机科学中的树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Template_talk:%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%AD%E7%9A%84%E6%A0%91&amp;action=edit&amp;redlink=1\"><abbr title=\"讨论该模板\" style=\"background: none; border: currentColor; border-image: none;\">论</abbr></a></li> \n         <li class=\"nv-edit\"><a class=\"external text\" href=\"//zh.wikipedia.org/w/index.php?title=Template:%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%AD%E7%9A%84%E6%A0%91&amp;action=edit\"><abbr title=\"编辑该模板\" style=\"background: none; border: currentColor; border-image: none;\">编</abbr></a></li> \n        </ul> \n       </div> \n       <div style=\"font-size: 110%;\">\n        <a title=\"计算机科学\" href=\"/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6\">计算机科学</a>中的\n        <a title=\"树 (数据结构)\" href=\"/wiki/%E6%A0%91_(%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)\">树</a>\n       </div> </th> \n     </tr> \n     <tr style=\"height: 2px;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr> \n      <th class=\"navbox-group\" scope=\"row\"><a title=\"二叉树\" href=\"/wiki/%E4%BA%8C%E5%8F%89%E6%A0%91\">二叉树</a></th> \n      <td class=\"navbox-list navbox-odd hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><a title=\"二叉查找树\" href=\"/wiki/%E4%BA%8C%E5%85%83%E6%90%9C%E5%B0%8B%E6%A8%B9\">二叉查找树（BST）</a></li> \n         <li><a title=\"笛卡尔树\" href=\"/wiki/%E7%AC%9B%E5%8D%A1%E5%B0%94%E6%A0%91\">笛卡尔树</a></li> \n         <li><a title=\"MVP树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=MVP%E6%A0%91&amp;action=edit&amp;redlink=1\">MVP树</a></li> \n         <li><a title=\"Top tree（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Top_tree&amp;action=edit&amp;redlink=1\">Top tree</a></li> \n         <li><a title=\"T树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=T%E6%A0%91&amp;action=edit&amp;redlink=1\">T树</a></li> \n        </ul> \n       </div> </td> \n     </tr> \n     <tr style=\"height: 2px;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr> \n      <th class=\"navbox-group\" scope=\"row\"><a title=\"自平衡二叉查找树\" class=\"mw-redirect\" href=\"/wiki/%E8%87%AA%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91\">自平衡二叉查找树</a></th> \n      <td class=\"navbox-list navbox-even hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><a title=\"AA树\" href=\"/wiki/AA%E6%A0%91\">AA树</a></li> \n         <li><a title=\"AVL树\" href=\"/wiki/AVL%E6%A0%91\">AVL树</a></li> \n         <li><a title=\"左倾红黑树\" href=\"/wiki/%E5%B7%A6%E5%80%BE%E7%BA%A2%E9%BB%91%E6%A0%91\">左倾红黑树</a></li> \n         <li><a title=\"红黑树\" href=\"/wiki/%E7%BA%A2%E9%BB%91%E6%A0%91\">红黑树</a></li> \n         <li><a title=\"替罪羊树\" href=\"/wiki/%E6%9B%BF%E7%BD%AA%E7%BE%8A%E6%A0%91\">替罪羊树</a></li> \n         <li><a title=\"伸展树\" href=\"/wiki/%E4%BC%B8%E5%B1%95%E6%A0%91\">伸展树</a></li> \n         <li><a class=\"mw-selflink selflink\">树堆</a></li> \n         <li><a title=\"加权平衡树\" href=\"/wiki/%E5%8A%A0%E6%9D%83%E5%B9%B3%E8%A1%A1%E6%A0%91\">加权平衡树</a></li> \n        </ul> \n       </div> </td> \n     </tr> \n     <tr style=\"height: 2px;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr> \n      <th class=\"navbox-group\" scope=\"row\"><a title=\"B树\" href=\"/wiki/B%E6%A0%91\">B树</a></th> \n      <td class=\"navbox-list navbox-odd hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><a title=\"B+树\" href=\"/wiki/B%2B%E6%A0%91\">B+树</a></li> \n         <li><a title=\"B*树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=B*%E6%A0%91&amp;action=edit&amp;redlink=1\">B*树</a></li> \n         <li><a title=\"Bx树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Bx%E6%A0%91&amp;action=edit&amp;redlink=1\">B<small><sup>x</sup></small>树</a></li> \n         <li><a title=\"UB树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=UB%E6%A0%91&amp;action=edit&amp;redlink=1\">UB树</a></li> \n         <li><a title=\"2-3树\" href=\"/wiki/2-3%E6%A0%91\">2-3树</a></li> \n         <li><a title=\"2-3-4树\" href=\"/wiki/2-3-4%E6%A0%91\">2-3-4树</a></li> \n         <li><a title=\"(a,b)-树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=(a,b)-%E6%A0%91&amp;action=edit&amp;redlink=1\">(a,b)-树</a></li> \n         <li><a title=\"Dancing tree（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Dancing_tree&amp;action=edit&amp;redlink=1\">Dancing tree</a></li> \n         <li><a title=\"H树\" href=\"/wiki/H%E6%A0%91\">H树</a></li> \n        </ul> \n       </div> </td> \n     </tr> \n     <tr style=\"height: 2px;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr> \n      <th class=\"navbox-group\" scope=\"row\"><a title=\"堆 (数据结构)\" href=\"/wiki/%E5%A0%86_(%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)\">堆</a></th> \n      <td class=\"navbox-list navbox-even hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><a title=\"二叉堆\" href=\"/wiki/%E4%BA%8C%E5%8F%89%E5%A0%86\">二叉堆</a></li> \n         <li><a title=\"二项堆\" href=\"/wiki/%E4%BA%8C%E9%A1%B9%E5%A0%86\">二项堆</a></li> \n         <li><a title=\"斐波那契堆\" href=\"/wiki/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E5%A0%86\">斐波那契堆</a></li> \n         <li><a title=\"左偏树\" href=\"/wiki/%E5%B7%A6%E5%81%8F%E6%A0%91\">左偏树</a></li> \n         <li><a title=\"Pairing heap（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Pairing_heap&amp;action=edit&amp;redlink=1\">Pairing heap</a></li> \n         <li><a title=\"斜堆\" href=\"/wiki/%E6%96%9C%E5%A0%86\">斜堆</a></li> \n         <li><a title=\"Van Emde Boas tree（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Van_Emde_Boas_tree&amp;action=edit&amp;redlink=1\">Van Emde Boas tree</a></li> \n        </ul> \n       </div> </td> \n     </tr> \n     <tr style=\"height: 2px;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr> \n      <th class=\"navbox-group\" scope=\"row\"><a title=\"Trie\" href=\"/wiki/Trie\">Trie</a></th> \n      <td class=\"navbox-list navbox-odd hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><a title=\"后缀树\" href=\"/wiki/%E5%90%8E%E7%BC%80%E6%A0%91\">后缀树</a></li> \n         <li><a title=\"基数树\" href=\"/wiki/%E5%9F%BA%E6%95%B0%E6%A0%91\">基数树</a></li> \n         <li><a title=\"三元搜索树\" href=\"/wiki/%E4%B8%89%E5%85%83%E6%90%9C%E7%B4%A2%E6%A0%91\">三叉查找树</a></li> \n         <li><a title=\"X-快速前缀树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=X-%E5%BF%AB%E9%80%9F%E5%89%8D%E7%BC%80%E6%A0%91&amp;action=edit&amp;redlink=1\">X-快速前缀树</a></li> \n         <li><a title=\"Y-快速前缀树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Y-%E5%BF%AB%E9%80%9F%E5%89%8D%E7%BC%80%E6%A0%91&amp;action=edit&amp;redlink=1\">Y-快速前缀树</a></li> \n        </ul> \n       </div> </td> \n     </tr> \n     <tr style=\"height: 2px;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr> \n      <th class=\"navbox-group\" scope=\"row\"><a title=\"二叉空间分割（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E4%BA%8C%E5%8F%89%E7%A9%BA%E9%97%B4%E5%88%86%E5%89%B2&amp;action=edit&amp;redlink=1\">二叉空间分割（BSP）</a>树</th> \n      <td class=\"navbox-list navbox-even hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><a title=\"四叉树\" href=\"/wiki/%E5%9B%9B%E5%8F%89%E6%A0%91\">四叉树</a></li> \n         <li><a title=\"八叉树\" href=\"/wiki/%E5%85%AB%E5%8F%89%E6%A0%91\">八叉树</a></li> \n         <li><a title=\"K-d树\" href=\"/wiki/K-d%E6%A0%91\"><i>k</i>-d树</a></li> \n         <li><a title=\"隐式k-d树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E9%9A%90%E5%BC%8Fk-d%E6%A0%91&amp;action=edit&amp;redlink=1\">隐式<i>k</i>-d树</a></li> \n         <li><a title=\"VP树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=VP%E6%A0%91&amp;action=edit&amp;redlink=1\">VP树</a></li> \n        </ul> \n       </div> </td> \n     </tr> \n     <tr style=\"height: 2px;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr> \n      <th class=\"navbox-group\" scope=\"row\">非二叉树</th> \n      <td class=\"navbox-list navbox-odd hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><a title=\"指数树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E6%8C%87%E6%95%B0%E6%A0%91&amp;action=edit&amp;redlink=1\">指数树</a></li> \n         <li><a title=\"融合树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E8%9E%8D%E5%90%88%E6%A0%91&amp;action=edit&amp;redlink=1\">融合树</a></li> \n         <li><a title=\"区间树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E5%8C%BA%E9%97%B4%E6%A0%91&amp;action=edit&amp;redlink=1\">区间树</a></li> \n         <li><a title=\"PQ树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=PQ%E6%A0%91&amp;action=edit&amp;redlink=1\">PQ树</a></li> \n         <li><a title=\"Range tree（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Range_tree&amp;action=edit&amp;redlink=1\">Range tree</a></li> \n         <li><a title=\"SPQR树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=SPQR%E6%A0%91&amp;action=edit&amp;redlink=1\">SPQR树</a></li> \n        </ul> \n       </div> </td> \n     </tr> \n     <tr style=\"height: 2px;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr> \n      <th class=\"navbox-group\" scope=\"row\"><a title=\"空间数据库（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E7%A9%BA%E9%97%B4%E6%95%B0%E6%8D%AE%E5%BA%93&amp;action=edit&amp;redlink=1\">空间</a>数据分割树</th> \n      <td class=\"navbox-list navbox-even hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><a title=\"R树\" href=\"/wiki/R%E6%A0%91\">R树</a></li> \n         <li><a title=\"R*树\" href=\"/wiki/R*%E6%A0%91\">R*树</a></li> \n         <li><a title=\"R+树\" href=\"/wiki/R%2B%E6%A0%91\">R+树</a></li> \n         <li><a title=\"X树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=X%E6%A0%91&amp;action=edit&amp;redlink=1\">X树</a></li> \n         <li><a title=\"M树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=M%E6%A0%91&amp;action=edit&amp;redlink=1\">M树</a></li> \n         <li><a title=\"线段树 (储存区间)\" href=\"/wiki/%E7%B7%9A%E6%AE%B5%E6%A8%B9_(%E5%84%B2%E5%AD%98%E5%8D%80%E9%96%93)\">线段树</a></li> \n         <li><a title=\"希尔伯特R树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E5%B8%8C%E5%B0%94%E4%BC%AF%E7%89%B9R%E6%A0%91&amp;action=edit&amp;redlink=1\">希尔伯特R树</a></li> \n         <li><a title=\"优先R树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E4%BC%98%E5%85%88R%E6%A0%91&amp;action=edit&amp;redlink=1\">优先R树</a></li> \n        </ul> \n       </div> </td> \n     </tr> \n     <tr style=\"height: 2px;\"> \n      <td colspan=\"2\"></td> \n     </tr> \n     <tr> \n      <th class=\"navbox-group\" scope=\"row\">其他树</th> \n      <td class=\"navbox-list navbox-odd hlist\" style=\"padding: 0px; width: 100%; text-align: left; border-left-width: 2px; border-left-style: solid;\"> \n       <div style=\"padding: 0em 0.25em;\"> \n        <ul> \n         <li><a title=\"散列日历（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E6%95%A3%E5%88%97%E6%97%A5%E5%8E%86&amp;action=edit&amp;redlink=1\">散列日历</a></li> \n         <li><a title=\"散列树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=%E6%95%A3%E5%88%97%E6%A0%91&amp;action=edit&amp;redlink=1\">散列树</a></li> \n         <li><a title=\"Finger tree（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Finger_tree&amp;action=edit&amp;redlink=1\">Finger tree</a></li> \n         <li><a title=\"Order statistic tree（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Order_statistic_tree&amp;action=edit&amp;redlink=1\">Order statistic tree</a></li> \n         <li><a title=\"Metric tree（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Metric_tree&amp;action=edit&amp;redlink=1\">Metric tree</a></li> \n         <li><a title=\"Cover tree（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Cover_tree&amp;action=edit&amp;redlink=1\">Cover tree</a></li> \n         <li><a title=\"BK树（页面不存在）\" class=\"new\" href=\"/w/index.php?title=BK%E6%A0%91&amp;action=edit&amp;redlink=1\">BK树</a></li> \n         <li><a title=\"Doubly chained tree（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Doubly_chained_tree&amp;action=edit&amp;redlink=1\">Doubly chained tree</a></li> \n         <li><a title=\"IDistance（页面不存在）\" class=\"new\" href=\"/w/index.php?title=IDistance&amp;action=edit&amp;redlink=1\">iDistance</a></li> \n         <li><a title=\"Link-cut tree（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Link-cut_tree&amp;action=edit&amp;redlink=1\">Link-cut tree</a></li> \n         <li><a title=\"Log-structured merge-tree（页面不存在）\" class=\"new\" href=\"/w/index.php?title=Log-structured_merge-tree&amp;action=edit&amp;redlink=1\">Log-structured merge-tree</a></li> \n         <li><a title=\"树状数组\" href=\"/wiki/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84\">树状数组</a></li> \n        </ul> \n       </div> </td> \n     </tr> \n    </tbody>\n   </table> </td> \n </tr> \n</tbody>","fragment_id":"与其他结构的比较_3","scratchTime":"2017-10-28 15:30:03.0","type":"leaf","flag":"fragment"}]}]}